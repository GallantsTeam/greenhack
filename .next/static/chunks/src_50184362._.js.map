{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/site-settings/smtp/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Mail, Loader2, Send } from 'lucide-react'; // Added Send icon\nimport { useToast } from '@/hooks/use-toast';\nimport type { SmtpSettings } from '@/types';\n\nconst smtpSettingsSchema = z.object({\n  smtp_host: z.string().optional().nullable(),\n  smtp_port: z.coerce.number().positive(\"Порт должен быть положительным числом.\").optional().nullable(),\n  smtp_username: z.string().optional().nullable(),\n  smtp_password: z.string().optional().nullable(),\n  smtp_encryption: z.enum(['none', 'ssl', 'tls']).nullable().optional().default('none'),\n  from_email: z.string().email({ message: \"Неверный формат Email отправителя.\" }).optional().nullable().or(z.literal('')),\n  from_name: z.string().optional().nullable(),\n});\n\ntype SmtpSettingsFormValues = z.infer<typeof smtpSettingsSchema>;\n\nexport default function AdminSmtpSettingsPage() {\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFetching, setIsFetching] = useState(true);\n  const [testEmailRecipient, setTestEmailRecipient] = useState('');\n  const [isSendingTestEmail, setIsSendingTestEmail] = useState(false);\n\n  const form = useForm<SmtpSettingsFormValues>({\n    resolver: zodResolver(smtpSettingsSchema),\n    defaultValues: {\n      smtp_host: '',\n      smtp_port: 587,\n      smtp_username: '',\n      smtp_password: '',\n      smtp_encryption: 'tls',\n      from_email: '',\n      from_name: '',\n    },\n  });\n\n  const fetchSmtpSettings = useCallback(async () => {\n    setIsFetching(true);\n    try {\n      const response = await fetch('/api/admin/site-settings/smtp');\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: 'Failed to fetch SMTP settings' }));\n        throw new Error(errorData.message || 'Failed to fetch SMTP settings');\n      }\n      const data: SmtpSettings = await response.json();\n      form.reset({\n        smtp_host: data.smtp_host || '',\n        smtp_port: data.smtp_port !== null ? Number(data.smtp_port) : 587,\n        smtp_username: data.smtp_username || '',\n        smtp_password: '', // Password is not pre-filled for security\n        smtp_encryption: data.smtp_encryption || 'none',\n        from_email: data.from_email || '',\n        from_name: data.from_name || '',\n      });\n    } catch (error: any) {\n      toast({ title: \"Ошибка загрузки SMTP\", description: error.message, variant: \"destructive\" });\n    } finally {\n      setIsFetching(false);\n    }\n  }, [form, toast]);\n\n  useEffect(() => {\n    fetchSmtpSettings();\n  }, [fetchSmtpSettings]);\n\n  const onSubmit = async (data: SmtpSettingsFormValues) => {\n    setIsLoading(true);\n    const payload = { ...data };\n    if (!payload.smtp_password) {\n      delete payload.smtp_password;\n    }\n\n    try {\n      const response = await fetch('/api/admin/site-settings/smtp', {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload),\n      });\n      const result = await response.json();\n      if (!response.ok) throw new Error(result.message || 'Не удалось сохранить SMTP настройки.');\n      toast({ title: \"SMTP Настройки сохранены\", description: \"Конфигурация SMTP успешно обновлена.\" });\n      // form.reset({ ...data, smtp_password: '' }); // Keep form state as is unless refetching\n      await fetchSmtpSettings(); // Refetch to ensure form reflects saved state (excluding password)\n    } catch (error: any) {\n      toast({ title: \"Ошибка сохранения SMTP\", description: error.message, variant: \"destructive\" });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleSendTestEmail = async () => {\n    if (!testEmailRecipient) {\n      toast({ title: \"Ошибка\", description: \"Введите Email получателя для тестового письма.\", variant: \"destructive\" });\n      return;\n    }\n    if (!form.getValues('smtp_host') || !form.getValues('smtp_port')) {\n        toast({ title: \"Ошибка\", description: \"Для отправки тестового письма необходимо сохранить основные SMTP настройки (хост и порт).\", variant: \"destructive\" });\n        return;\n    }\n\n    setIsSendingTestEmail(true);\n    try {\n      const response = await fetch('/api/admin/site-settings/smtp/test-email', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ recipientEmail: testEmailRecipient }),\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.message || 'Не удалось отправить тестовое письмо.');\n      }\n      toast({ title: \"Тестовое письмо\", description: result.message });\n    } catch (error: any) {\n      toast({ title: \"Ошибка тестового письма\", description: error.message, variant: \"destructive\" });\n    } finally {\n      setIsSendingTestEmail(false);\n    }\n  };\n\n  if (isFetching) {\n    return (\n      <div className=\"flex items-center justify-center p-10\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n        <p className=\"ml-3 text-muted-foreground\">Загрузка SMTP настроек...</p>\n      </div>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"text-xl font-bold text-primary flex items-center\">\n          <Mail className=\"mr-2 h-5 w-5\" />\n          Настройки SMTP\n        </CardTitle>\n        <CardDescription className=\"text-muted-foreground\">Конфигурация сервера для отправки email-уведомлений.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"smtp_host\" className=\"text-foreground\">SMTP Хост</Label>\n              <Input id=\"smtp_host\" {...form.register(\"smtp_host\")} placeholder=\"smtp.example.com\" className=\"mt-1\" disabled={isLoading} />\n              {form.formState.errors.smtp_host && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.smtp_host.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"smtp_port\" className=\"text-foreground\">SMTP Порт</Label>\n              <Input id=\"smtp_port\" type=\"number\" {...form.register(\"smtp_port\")} placeholder=\"587\" className=\"mt-1\" disabled={isLoading} />\n              {form.formState.errors.smtp_port && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.smtp_port.message}</p>}\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"smtp_username\" className=\"text-foreground\">SMTP Имя пользователя</Label>\n              <Input id=\"smtp_username\" {...form.register(\"smtp_username\")} placeholder=\"user@example.com\" className=\"mt-1\" disabled={isLoading} />\n              {form.formState.errors.smtp_username && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.smtp_username.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"smtp_password\" className=\"text-foreground\">SMTP Пароль</Label>\n              <Input id=\"smtp_password\" type=\"password\" {...form.register(\"smtp_password\")} placeholder=\"•••••••• (оставьте пустым, чтобы не менять)\" className=\"mt-1\" disabled={isLoading} />\n               {form.formState.errors.smtp_password && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.smtp_password.message}</p>}\n            </div>\n          </div>\n          <div>\n            <Label htmlFor=\"smtp_encryption\" className=\"text-foreground\">Шифрование</Label>\n            <Controller\n              control={form.control}\n              name=\"smtp_encryption\"\n              render={({ field }) => (\n                <Select onValueChange={field.onChange} value={field.value || \"none\"} disabled={isLoading}>\n                  <SelectTrigger className=\"w-full mt-1\">\n                    <SelectValue placeholder=\"Выберите тип шифрования\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"none\">None</SelectItem>\n                    <SelectItem value=\"ssl\">SSL</SelectItem>\n                    <SelectItem value=\"tls\">TLS</SelectItem>\n                  </SelectContent>\n                </Select>\n              )}\n            />\n             {form.formState.errors.smtp_encryption && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.smtp_encryption.message}</p>}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"from_email\" className=\"text-foreground\">Email отправителя</Label>\n              <Input id=\"from_email\" type=\"email\" {...form.register(\"from_email\")} placeholder=\"noreply@example.com\" className=\"mt-1\" disabled={isLoading} />\n              {form.formState.errors.from_email && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.from_email.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"from_name\" className=\"text-foreground\">Имя отправителя</Label>\n              <Input id=\"from_name\" {...form.register(\"from_name\")} placeholder=\"Green Hack Support\" className=\"mt-1\" disabled={isLoading} />\n              {form.formState.errors.from_name && <p className=\"text-sm text-destructive mt-1\">{form.formState.errors.from_name.message}</p>}\n            </div>\n          </div>\n          <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n            <Button type=\"submit\" className=\"bg-primary hover:bg-primary/90 text-primary-foreground w-full sm:w-auto\" disabled={isLoading}>\n              {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Сохранить SMTP\n            </Button>\n          </div>\n        </form>\n        \n        <div className=\"mt-8 pt-6 border-t border-border/30\">\n            <h4 className=\"text-md font-medium text-foreground mb-2\">Отправить тестовое письмо</h4>\n            <div className=\"flex flex-col sm:flex-row gap-3\">\n                <Input \n                    type=\"email\" \n                    placeholder=\"recipient@example.com\" \n                    value={testEmailRecipient}\n                    onChange={(e) => setTestEmailRecipient(e.target.value)}\n                    className=\"flex-grow\"\n                    disabled={isSendingTestEmail}\n                />\n                <Button \n                    type=\"button\" \n                    variant=\"outline\" \n                    className=\"w-full sm:w-auto border-primary text-primary hover:bg-primary/10\" \n                    onClick={handleSendTestEmail} \n                    disabled={isSendingTestEmail || !testEmailRecipient.trim() || !form.getValues('smtp_host') || !form.getValues('smtp_port')}\n                >\n                    {isSendingTestEmail ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Send className=\"mr-2 h-4 w-4\" />}\n                    Отправить тест\n                </Button>\n            </div>\n             <p className=\"text-xs text-muted-foreground mt-2\">Убедитесь, что основные SMTP настройки (хост, порт) сохранены перед отправкой теста.</p>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}