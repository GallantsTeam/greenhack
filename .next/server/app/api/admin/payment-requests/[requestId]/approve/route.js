"use strict";(()=>{var e={};e.id=2018,e.ids=[2018],e.modules={3295:e=>{e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},19771:e=>{e.exports=require("process")},27910:e=>{e.exports=require("stream")},28354:e=>{e.exports=require("util")},29294:e=>{e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},34631:e=>{e.exports=require("tls")},41204:e=>{e.exports=require("string_decoder")},44870:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{e.exports=require("crypto")},61934:(e,r,t)=>{t.r(r),t.d(r,{patchFetch:()=>A,routeModule:()=>l,serverHooks:()=>g,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>c});var s={};t.r(s),t.d(s,{POST:()=>d});var a=t(96559),o=t(48088),n=t(37719),p=t(32190),i=t(75365),u=t(42192);async function d(e,{params:r}){let t=parseInt(r.requestId,10);if(isNaN(t))return p.NextResponse.json({message:"Invalid request ID"},{status:400});console.log(`[API ApprovePayment] Approving request ID: ${t}`);try{let e=await (0,i.P)("SELECT * FROM payment_requests WHERE id = ? AND status = ?",[t,"pending"]);if(!Array.isArray(e)||0===e.length)return console.log(`[API ApprovePayment] Request ${t} not found or not pending.`),p.NextResponse.json({message:"Заявка не найдена или уже обработана."},{status:404});let r=e[0];console.log("[API ApprovePayment] Found payment request:",r);let s=await (0,i.P)("SELECT id, username, email, balance FROM users WHERE id = ?",[r.user_id]);if(!Array.isArray(s)||0===s.length)return console.log(`[API ApprovePayment] User ${r.user_id} not found for request ${t}. Rejecting request.`),await (0,i.P)("UPDATE payment_requests SET status = ?, admin_notes = ? WHERE id = ?",["rejected","Пользователь не найден при попытке одобрения.",t]),p.NextResponse.json({message:"Пользователь для этой заявки не найден."},{status:404});let a=s[0],o=parseFloat(a.balance||"0"),n=o+parseFloat(r.amount_gh);console.log(`[API ApprovePayment] User ${a.username} current balance: ${o}, amount to add: ${r.amount_gh}, new balance: ${n}`);try{console.log(`[API ApprovePayment] Updating user ${a.id} balance to ${n.toFixed(2)}`),await (0,i.P)("UPDATE users SET balance = ? WHERE id = ?",[n.toFixed(2),r.user_id]);let e=`Пополнение через одобренную заявку #${t} (${r.payment_method_details||"Card"})`;console.log(`[API ApprovePayment] Inserting balance transaction: ${e}`),await (0,i.P)("INSERT INTO balance_transactions (user_id, transaction_type, amount_gh, description, related_payment_request_id) VALUES (?, ?, ?, ?, ?)",[r.user_id,"deposit",r.amount_gh,e,t]),console.log(`[API ApprovePayment] Updating payment request ${t} status to approved.`),await (0,i.P)("UPDATE payment_requests SET status = ?, updated_at = NOW() WHERE id = ?",["approved",t]);try{console.log(`[API ApprovePayment] Attempting to send admin notification for balance deposit for user ID: ${a.id}`),await (0,u._q)(a.id,a.username||"N/A",parseFloat(r.amount_gh),`Заявка #${t} одобрена (Тест. режим)`)}catch(e){console.error("[API ApprovePayment] Failed to send Telegram notification after approving payment:",e)}return p.NextResponse.json({message:`Заявка #${t} одобрена. Баланс пользователя ${a.username||"ID: "+a.id} пополнен на ${r.amount_gh} GH.`})}catch(e){return console.error("[API ApprovePayment] Error during database operations:",e),p.NextResponse.json({message:`Ошибка базы данных при одобрении: ${e.message}`},{status:500})}}catch(e){return console.error("[API ApprovePayment] Outer Error:",e),p.NextResponse.json({message:`Внутренняя ошибка сервера: ${e.message}`},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/admin/payment-requests/[requestId]/approve/route",pathname:"/api/admin/payment-requests/[requestId]/approve",filename:"route",bundlePath:"app/api/admin/payment-requests/[requestId]/approve/route"},resolvedPagePath:"/var/www/html/src/app/api/admin/payment-requests/[requestId]/approve/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:m,workUnitAsyncStorage:c,serverHooks:g}=l;function A(){return(0,n.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:c})}},63033:e=>{e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},66136:e=>{e.exports=require("timers")},74075:e=>{e.exports=require("zlib")},79428:e=>{e.exports=require("buffer")},79551:e=>{e.exports=require("url")},91645:e=>{e.exports=require("net")},94735:e=>{e.exports=require("events")}};var r=require("../../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[4447,6724,5482,580,4800],()=>t(61934));module.exports=s})();