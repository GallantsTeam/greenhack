{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mysql.ts"],"sourcesContent":["\n'use server'; // Add this directive\n\nimport mysql from 'mysql2/promise';\n\nconst connectionConfig = {\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  connectionLimit: 10, // Optional: connection pool limit\n  namedPlaceholders: true, // Important for using object parameters\n  // Add SSL options if your Jino.ru MySQL requires it\n  // ssl: {\n  //   // ca: fs.readFileSync('/path/to/ca-cert.pem'), // if you have a CA cert\n  //   rejectUnauthorized: false // Be cautious with this in production, true is more secure\n  // }\n};\n\nlet pool: mysql.Pool | null = null;\n\nfunction getPool(): mysql.Pool {\n  if (!pool) {\n    if (!process.env.DB_HOST || !process.env.DB_USER || !process.env.DB_NAME) { // Password can be empty for some local setups\n      console.error(\"Database environment variables DB_HOST, DB_USER, or DB_NAME are not set.\");\n      throw new Error(\"Database environment variables are not fully set. Please check your .env.local file.\");\n    }\n    try {\n      pool = mysql.createPool(connectionConfig);\n      console.log(\"MySQL connection pool created successfully.\");\n\n      // Test the pool by getting a connection (optional, but good for early feedback)\n      pool.getConnection()\n        .then(connection => {\n          console.log(\"Successfully connected to database via pool.\");\n          connection.release();\n        })\n        .catch(err => {\n          console.error(\"Failed to get a connection from pool on startup:\", err);\n          // Depending on severity, you might want to invalidate the pool or exit\n          // For now, we'll let further queries fail if the pool is truly unusable.\n        });\n\n    } catch (error) {\n      console.error(\"Failed to create MySQL connection pool:\", error);\n      // Ensure pool remains null if creation fails\n      pool = null;\n      throw new Error(\"Database connection pool could not be created.\");\n    }\n  }\n  return pool;\n}\n\nexport async function query(sql: string, params?: any[] | object): Promise<any> {\n  const currentPool = getPool(); // This will throw if pool cannot be initialized\n\n  let connection;\n  try {\n    connection = await currentPool.getConnection();\n    console.log(`Executing SQL: ${sql} with params: ${params ? JSON.stringify(params) : 'No params'}`);\n    const [results] = await connection.execute(sql, params);\n    return results;\n  } catch (error: any) {\n    console.error('Database query error:', error.message, error.code, error.sqlMessage, error.sql);\n    throw new Error(`Database query failed: ${error.message}`);\n  } finally {\n    if (connection) {\n      connection.release();\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAEA,MAAM,mBAAmB;IACvB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,iBAAiB;IACjB,mBAAmB;AAMrB;AAEA,IAAI,OAA0B;AAE9B,SAAS;IACP,IAAI,CAAC,MAAM;QACT,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,EAAE;YACxE,QAAQ,KAAK,CAAC;YACd,MAAM,IAAI,MAAM;QAClB;QACA,IAAI;YACF,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;YACxB,QAAQ,GAAG,CAAC;YAEZ,gFAAgF;YAChF,KAAK,aAAa,GACf,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,WAAW,OAAO;YACpB,GACC,KAAK,CAAC,CAAA;gBACL,QAAQ,KAAK,CAAC,oDAAoD;YAClE,uEAAuE;YACvE,yEAAyE;YAC3E;QAEJ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2CAA2C;YACzD,6CAA6C;YAC7C,OAAO;YACP,MAAM,IAAI,MAAM;QAClB;IACF;IACA,OAAO;AACT;AAEO,eAAe,uCAAG,GAAH,MAAM,GAAW,EAAE,MAAuB;IAC9D,MAAM,cAAc,WAAW,gDAAgD;IAE/E,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,YAAY,aAAa;QAC5C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,IAAI,cAAc,EAAE,SAAS,KAAK,SAAS,CAAC,UAAU,aAAa;QACjG,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW,OAAO,CAAC,KAAK;QAChD,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO,EAAE,MAAM,IAAI,EAAE,MAAM,UAAU,EAAE,MAAM,GAAG;QAC7F,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;IAC3D,SAAU;QACR,IAAI,YAAY;YACd,WAAW,OAAO;QACpB;IACF;AACF;;;IAjBsB;;AAAA,iPAAA","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["\nimport type { Category, Product, CaseItem, Prize, ProductPricingOption, Purchase, InventoryItem, Referral, BalanceTransaction } from '@/types';\nimport { query } from './mysql'; \n\n// Fetch all \"categories\" (which are now games derived from products)\nexport const getAllCategories = async (): Promise<Category[]> => {\n  try {\n    const results = await query(\n      `SELECT DISTINCT \n         g.id as id, \n         g.slug as slug,\n         g.name as name, \n         g.description as description,\n         g.min_price as min_price,\n         g.image_url as imageUrl, \n         g.logo_url as logoUrl, \n         g.banner_url as banner_url,\n         g.platform as platform,\n         g.tags as tags,\n         g.data_ai_hint as dataAiHint,\n         g.hero_bullet_points as hero_bullet_points,\n         (SELECT COUNT(*) FROM products p WHERE p.game_slug = g.slug) as product_count \n       FROM games g\n       ORDER BY g.name ASC`\n    );\n    \n    return results.map((row: any) => ({\n      id: row.id, \n      name: row.name,\n      slug: row.slug,\n      description: row.description,\n      min_price: parseFloat(row.min_price) || 0,\n      imageUrl: (row.imageUrl || `https://placehold.co/800x400.png?text=${encodeURIComponent(row.name)}`).trim(),\n      logoUrl: (row.logoUrl || `https://placehold.co/150x150.png?text=${encodeURIComponent(row.name.substring(0,3))}`).trim(),\n      banner_url: row.banner_url ? row.banner_url.trim() : null,\n      platform: row.platform,\n      tags: typeof row.tags === 'string' ? row.tags.split(',').map((tag: string) => tag.trim()).filter(Boolean) : [],\n      dataAiHint: `${row.dataAiHint || row.name.toLowerCase()} game icon`,\n      hero_bullet_points: typeof row.hero_bullet_points === 'string' ? row.hero_bullet_points.split('\\n').map((bp: string) => bp.trim()).filter(Boolean) : [],\n      product_count: parseInt(row.product_count) || 0,\n    }));\n  } catch (error) {\n    console.error(\"Error fetching categories:\", error);\n    return [];\n  }\n};\n\n// Fetch a single \"category\" (game) by its slug\nexport const getCategoryBySlug = async (slug: string): Promise<Category | undefined> => {\n  try {\n    const results = await query(\n      `SELECT DISTINCT \n         g.id as id,\n         g.slug as slug,\n         g.name as name,\n         g.description as description,\n         g.min_price as min_price,\n         g.image_url as imageUrl,\n         g.logo_url as logoUrl,\n         g.banner_url as banner_url,\n         g.platform as platform,\n         g.tags as tags,\n         g.data_ai_hint as dataAiHint,\n         g.hero_bullet_points as hero_bullet_points,\n         (SELECT COUNT(*) FROM products p WHERE p.game_slug = g.slug) as product_count\n       FROM games g\n       WHERE g.slug = ?`,\n      [slug]\n    );\n    if (results.length === 0) return undefined;\n    const row = results[0];\n    return {\n      id: row.id,\n      name: row.name,\n      slug: row.slug,\n      description: row.description,\n      min_price: parseFloat(row.min_price) || 0,\n      imageUrl: (row.imageUrl || `https://placehold.co/800x400.png?text=${encodeURIComponent(row.name)}`).trim(),\n      logoUrl: (row.logoUrl || `https://placehold.co/150x150.png?text=${encodeURIComponent(row.name.substring(0,3))}`).trim(),\n      banner_url: row.banner_url ? row.banner_url.trim() : null,\n      platform: row.platform,\n      tags: typeof row.tags === 'string' ? row.tags.split(',').map(tag => tag.trim()).filter(tag => tag) : [],\n      dataAiHint: `${row.dataAiHint || row.name.toLowerCase()} game icon`,\n      hero_bullet_points: typeof row.hero_bullet_points === 'string' ? row.hero_bullet_points.split('\\n').map((bp: string) => bp.trim()).filter(Boolean) : [],\n      product_count: parseInt(row.product_count) || 0,\n    };\n  } catch (error) {\n    console.error(`Error fetching category by slug ${slug}:`, error);\n    return undefined;\n  }\n};\n\n// Fetch all products from the database\nexport const getAllProducts = async (): Promise<Product[]> => {\n  try {\n    const results = await query(\n      `SELECT \n         p.id, p.name, p.slug, p.game_slug, p.image_url, \n         p.status, p.status_text, \n         p.short_description, p.long_description, p.data_ai_hint,\n         p.mode, p.gallery_image_urls,\n         p.functions_aim_title, p.functions_aim, p.functions_aim_description,\n         p.functions_esp_title, p.functions_wallhack, p.functions_esp_description,\n         p.functions_misc_title, p.functions_misc, p.functions_misc_description,\n         p.system_os, p.system_build, p.system_gpu, p.system_cpu,\n         p.price_text,\n         p.retrieval_modal_intro_text,\n         p.retrieval_modal_antivirus_text,\n         p.retrieval_modal_antivirus_link_text,\n         p.retrieval_modal_antivirus_link_url,\n         p.retrieval_modal_launcher_text,\n         p.retrieval_modal_launcher_link_text,\n         p.retrieval_modal_launcher_link_url,\n         p.retrieval_modal_key_paste_text,\n         p.retrieval_modal_support_text,\n         p.retrieval_modal_support_link_text,\n         p.retrieval_modal_support_link_url,\n         p.retrieval_modal_how_to_run_link,\n         p.created_at, p.updated_at,\n         (SELECT MIN(ppo.price_rub) FROM product_pricing_options ppo WHERE ppo.product_id = p.id) as min_price_rub_calculated,\n         (SELECT MIN(ppo.price_gh) FROM product_pricing_options ppo WHERE ppo.product_id = p.id) as min_price_gh_calculated,\n         COALESCE(g.name, p.game_slug) as gameName,\n         g.logo_url as gameLogoUrl,\n         g.platform as gamePlatform\n       FROM products p\n       LEFT JOIN games g ON p.game_slug = g.slug \n       ORDER BY p.name ASC`\n    );\n    \n    return results.map((row: any) => ({\n      id: row.id,\n      name: row.name,\n      slug: row.slug,\n      game_slug: row.game_slug,\n      image_url: row.image_url ? row.image_url.trim() : null,\n      imageUrl: (row.image_url || `https://placehold.co/300x350.png?text=${encodeURIComponent(row.name)}`).trim(),\n      status: (row.status ? String(row.status).toLowerCase() : 'unknown') as Product['status'],\n      status_text: row.status_text,\n      price: parseFloat(row.min_price_rub_calculated || '0'), \n      min_price_rub: row.min_price_rub_calculated ? parseFloat(row.min_price_rub_calculated) : undefined,\n      min_price_gh: row.min_price_gh_calculated ? parseFloat(row.min_price_gh_calculated) : undefined,\n      price_text: row.price_text,\n      short_description: row.short_description,\n      long_description: row.long_description,\n      data_ai_hint: row.data_ai_hint || `${row.name.toLowerCase()} product`,\n      mode: row.mode,\n      gallery_image_urls: row.gallery_image_urls ? row.gallery_image_urls.split(',').map((url: string) => url.trim()).filter(Boolean) : [],\n      functions_aim_title: row.functions_aim_title,\n      functions_aim: row.functions_aim ? row.functions_aim.split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n      functions_aim_description: row.functions_aim_description,\n      functions_esp_title: row.functions_esp_title,\n      functions_wallhack: row.functions_wallhack ? row.functions_wallhack.split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n      functions_esp_description: row.functions_esp_description,\n      functions_misc_title: row.functions_misc_title,\n      functions_misc: row.functions_misc ? row.functions_misc.split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n      functions_misc_description: row.functions_misc_description,\n      system_os: row.system_os,\n      system_build: row.system_build,\n      system_gpu: row.system_gpu,\n      system_cpu: row.system_cpu,\n      retrieval_modal_intro_text: row.retrieval_modal_intro_text,\n      retrieval_modal_antivirus_text: row.retrieval_modal_antivirus_text,\n      retrieval_modal_antivirus_link_text: row.retrieval_modal_antivirus_link_text, \n      retrieval_modal_antivirus_link_url: row.retrieval_modal_antivirus_link_url,   \n      retrieval_modal_launcher_text: row.retrieval_modal_launcher_text,\n      retrieval_modal_launcher_link_text: row.retrieval_modal_launcher_link_text, \n      retrieval_modal_launcher_link_url: row.retrieval_modal_launcher_link_url,   \n      retrieval_modal_key_paste_text: row.retrieval_modal_key_paste_text,\n      retrieval_modal_support_text: row.retrieval_modal_support_text,\n      retrieval_modal_support_link_text: row.retrieval_modal_support_link_text, \n      retrieval_modal_support_link_url: row.retrieval_modal_support_link_url,   \n      retrieval_modal_how_to_run_link: row.retrieval_modal_how_to_run_link,\n      created_at: row.created_at,\n      updated_at: row.updated_at,\n      gameName: row.gameName,\n      gameLogoUrl: row.gameLogoUrl ? row.gameLogoUrl.trim() : null,\n      gamePlatform: row.gamePlatform, \n    }));\n  } catch (error) {\n    console.error(\"Error fetching products:\", error);\n    return [];\n  }\n};\n\n\n// Fetch a single product by its slug, including new detailed fields\nexport const getProductBySlug = async (slug: string): Promise<Product | undefined> => {\n  try {\n    const productResults = await query(\n      `SELECT \n         p.id, p.name, p.slug, p.game_slug, p.image_url, \n         p.status, p.status_text, \n         p.short_description, p.long_description, p.data_ai_hint,\n         p.mode, p.gallery_image_urls,\n         p.functions_aim_title, p.functions_aim, p.functions_aim_description,\n         p.functions_esp_title, p.functions_wallhack, p.functions_esp_description,\n         p.functions_misc_title, p.functions_misc, p.functions_misc_description,\n         p.system_os, p.system_build, p.system_gpu, p.system_cpu,\n         p.price_text,\n         p.retrieval_modal_intro_text, \n         p.retrieval_modal_antivirus_text, \n         p.retrieval_modal_antivirus_link_text,\n         p.retrieval_modal_antivirus_link_url,\n         p.retrieval_modal_launcher_text,\n         p.retrieval_modal_launcher_link_text,\n         p.retrieval_modal_launcher_link_url,\n         p.retrieval_modal_key_paste_text,\n         p.retrieval_modal_support_text,\n         p.retrieval_modal_support_link_text,\n         p.retrieval_modal_support_link_url,\n         p.retrieval_modal_how_to_run_link,\n         p.created_at, p.updated_at,\n         COALESCE(g.name, p.game_slug) as gameName,\n         g.logo_url as gameLogoUrl,\n         g.platform as gamePlatform \n       FROM products p\n       LEFT JOIN games g ON p.game_slug = g.slug \n       WHERE p.slug = ?`,\n      [slug]\n    );\n    if (productResults.length === 0) return undefined;\n    const row = productResults[0];\n\n    const pricingOptionsResults = await query(\n      'SELECT id, product_id, duration_days, price_rub, price_gh, payment_link, mode_label, created_at FROM product_pricing_options WHERE product_id = ? ORDER BY duration_days ASC, mode_label ASC',\n      [row.id] \n    );\n    \n    const pricing_options: ProductPricingOption[] = Array.isArray(pricingOptionsResults) ? pricingOptionsResults.map((opt: any) => ({\n      id: opt.id, \n      product_id: opt.product_id,\n      duration_days: parseInt(opt.duration_days, 10),\n      price_rub: parseFloat(opt.price_rub),\n      price_gh: parseFloat(opt.price_gh),\n      payment_link: opt.payment_link || null,\n      mode_label: opt.mode_label || null, \n      created_at: opt.created_at,\n    })) : [];\n    \n    const minRubOption = pricing_options.length > 0 ? pricing_options.reduce((min, p) => p.price_rub < min ? p.price_rub : min, pricing_options[0].price_rub) : 0;\n    const minGhOption = pricing_options.length > 0 ? pricing_options.reduce((min, p) => p.price_gh < min ? p.price_gh : min, pricing_options[0].price_gh) : 0;\n\n    return {\n      id: row.id,\n      name: row.name,\n      slug: row.slug,\n      game_slug: row.game_slug,\n      image_url: row.image_url ? row.image_url.trim() : null,\n      imageUrl: (row.image_url || `https://placehold.co/600x400.png?text=${encodeURIComponent(row.name)}`).trim(),\n      status: (row.status ? String(row.status).toLowerCase() : 'unknown') as Product['status'],\n      status_text: row.status_text || 'Статус неизвестен',\n      price: minRubOption, \n      min_price_rub: minRubOption,\n      min_price_gh: minGhOption,\n      price_text: row.price_text,\n      short_description: row.short_description,\n      long_description: row.long_description,\n      data_ai_hint: row.data_ai_hint || `${row.name.toLowerCase()} product`,\n      mode: row.mode,\n      gallery_image_urls: row.gallery_image_urls ? row.gallery_image_urls.split(',').map((url: string) => url.trim()).filter(Boolean) : [],\n      functions_aim_title: row.functions_aim_title,\n      functions_aim: row.functions_aim ? row.functions_aim.split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n      functions_aim_description: row.functions_aim_description,\n      functions_esp_title: row.functions_esp_title,\n      functions_wallhack: row.functions_wallhack ? row.functions_wallhack.split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n      functions_esp_description: row.functions_esp_description,\n      functions_misc_title: row.functions_misc_title,\n      functions_misc: row.functions_misc ? row.functions_misc.split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n      functions_misc_description: row.functions_misc_description,\n      system_os: row.system_os,\n      system_build: row.system_build,\n      system_gpu: row.system_gpu,\n      system_cpu: row.system_cpu,\n      pricing_options: pricing_options.length > 0 ? pricing_options : [], \n      retrieval_modal_intro_text: row.retrieval_modal_intro_text,\n      retrieval_modal_antivirus_text: row.retrieval_modal_antivirus_text,\n      retrieval_modal_antivirus_link_text: row.retrieval_modal_antivirus_link_text, \n      retrieval_modal_antivirus_link_url: row.retrieval_modal_antivirus_link_url,   \n      retrieval_modal_launcher_text: row.retrieval_modal_launcher_text,\n      retrieval_modal_launcher_link_text: row.retrieval_modal_launcher_link_text, \n      retrieval_modal_launcher_link_url: row.retrieval_modal_launcher_link_url,   \n      retrieval_modal_key_paste_text: row.retrieval_modal_key_paste_text,\n      retrieval_modal_support_text: row.retrieval_modal_support_text,\n      retrieval_modal_support_link_text: row.retrieval_modal_support_link_text, \n      retrieval_modal_support_link_url: row.retrieval_modal_support_link_url,   \n      retrieval_modal_how_to_run_link: row.retrieval_modal_how_to_run_link,\n      created_at: row.created_at,\n      updated_at: row.updated_at,\n      gameName: row.gameName,\n      gameLogoUrl: row.gameLogoUrl ? row.gameLogoUrl.trim() : null,\n      gamePlatform: row.gamePlatform,\n    };\n  } catch (error) {\n    console.error(`Error fetching product by slug ${slug}:`, error);\n    return undefined;\n  }\n};\n\n// Fetch products belonging to a specific game slug\nexport const getProductsByCategorySlug = async (gameSlug: string): Promise<Product[]> => {\n  try {\n    const results = await query(\n      `SELECT \n         p.id, p.name, p.slug, p.game_slug, p.image_url, \n         p.status, p.status_text, \n         p.short_description, p.long_description, p.data_ai_hint,\n         (SELECT MIN(ppo.price_rub) FROM product_pricing_options ppo WHERE ppo.product_id = p.id) as min_price_rub,\n         (SELECT MIN(ppo.price_gh) FROM product_pricing_options ppo WHERE ppo.product_id = p.id) as min_price_gh,\n         p.price_text,\n         COALESCE(g.name, p.game_slug) as gameName,\n         g.logo_url as gameLogoUrl,\n         g.platform as gamePlatform \n       FROM products p\n       LEFT JOIN games g ON p.game_slug = g.slug \n       WHERE p.game_slug = ?\n       ORDER BY p.name ASC`,\n      [gameSlug]\n    );\n    return results.map((row: any) => ({\n      id: row.id,\n      name: row.name,\n      slug: row.slug,\n      game_slug: row.game_slug,\n      image_url: row.image_url ? row.image_url.trim() : null,\n      imageUrl: (row.image_url || `https://placehold.co/300x350.png?text=${encodeURIComponent(row.name)}`).trim(),\n      status: (row.status ? String(row.status).toLowerCase() : 'unknown') as Product['status'],\n      status_text: row.status_text || 'Статус неизвестен',\n      price: parseFloat(row.min_price_rub) || 0,\n      min_price_rub: row.min_price_rub ? parseFloat(row.min_price_rub) : undefined,\n      min_price_gh: row.min_price_gh ? parseFloat(row.min_price_gh) : undefined,\n      price_text: row.price_text,\n      short_description: row.short_description,\n      long_description: row.long_description,\n      data_ai_hint: row.data_ai_hint || `${row.name.toLowerCase()} product`,\n      gameName: row.gameName,\n      gameLogoUrl: row.gameLogoUrl ? row.gameLogoUrl.trim() : null,\n      gamePlatform: row.gamePlatform, \n    }));\n  } catch (error) {\n    console.error(`Error fetching products for game slug ${gameSlug}:`, error);\n    return [];\n  }\n};\n\n// --- Case Data Fetching ---\nexport const getCaseById = async (caseId: string): Promise<CaseItem | null> => {\n  try {\n    const caseResults = await query('SELECT * FROM cases WHERE id = ? AND is_active = TRUE', [caseId]);\n    if (caseResults.length === 0) {\n      console.warn(`Case with ID ${caseId} not found or not active.`);\n      return null;\n    }\n    const caseRow = caseResults[0];\n\n    const prizeResults = await query('SELECT * FROM case_prizes WHERE case_id = ?', [caseId]);\n    const prizes: Prize[] = prizeResults.map((pRow: any) => ({\n      id: pRow.id,\n      case_id: pRow.case_id,\n      name: pRow.name,\n      prize_type: pRow.prize_type,\n      related_product_id: pRow.related_product_id,\n      duration_days: pRow.duration_days ? parseInt(pRow.duration_days, 10) : null,\n      days: pRow.duration_days ? parseInt(pRow.duration_days, 10) : null, \n      balance_gh_amount: pRow.balance_gh_amount ? parseFloat(pRow.balance_gh_amount) : undefined,\n      image_url: pRow.image_url ? pRow.image_url.trim() : null,\n      imageUrl: (pRow.image_url || `https://placehold.co/120x120.png?text=${encodeURIComponent(pRow.id)}`).trim(),\n      chance: parseFloat(pRow.chance),\n      sell_value_gh: pRow.sell_value_gh ? parseFloat(pRow.sell_value_gh) : undefined,\n      data_ai_hint: pRow.data_ai_hint || `${pRow.name.toLowerCase()} prize`,\n      mode_label: pRow.mode_label, \n    }));\n\n    return {\n      id: caseRow.id,\n      name: caseRow.name,\n      image_url: caseRow.image_url ? caseRow.image_url.trim() : null,\n      imageUrl: (caseRow.image_url || `https://placehold.co/300x300.png?text=Case`).trim(), \n      prizes: prizes,\n      base_price_gh: parseFloat(caseRow.base_price_gh),\n      description: caseRow.description,\n      data_ai_hint: caseRow.data_ai_hint || `${caseRow.name.toLowerCase()} case`,\n      is_active: Boolean(caseRow.is_active),\n      is_hot_offer: Boolean(caseRow.is_hot_offer),\n      timer_enabled: Boolean(caseRow.timer_enabled),\n      timer_ends_at: caseRow.timer_ends_at ? new Date(caseRow.timer_ends_at).toISOString() : null,\n      created_at: caseRow.created_at,\n    };\n  } catch (error) {\n    console.error(`Error fetching case by ID ${caseId}:`, error);\n    return null;\n  }\n};\n\nexport const getPurchaseHistory = async (userId: number): Promise<Purchase[]> => {\n  return []; \n};\n\nexport interface CaseOpeningRecord { \n  id: number;\n  user_id: number;\n  case_id: string;\n  won_prize_id: string;\n  opened_at?: string; \n  action_taken: 'kept' | 'sold' | 'pending';\n  sold_value_gh?: number | null;\n}\n\nexport const getCaseOpeningsHistory = async (userId: number): Promise<CaseOpeningRecord[]> => { \n return []; \n};\n\nexport const getUserInventory = async (userId: number): Promise<InventoryItem[]> => {\n  return []; \n};\n\nexport const getReferralData = async (userId: number): Promise<{ referrals: Referral[], totalEarned: number }> => {\n  return { referrals: [], totalEarned: 0 }; \n};\n\nexport const getBalanceTransactions = async (userId: number): Promise<BalanceTransaction[]> => {\n  return []; \n};\n\n    \n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/products/%5Bslug%5D/route.ts"],"sourcesContent":["\n// src/app/api/products/[slug]/route.ts\n// This file remains a Server Component\n\nimport { NextResponse } from 'next/server';\nimport { getProductBySlug } from '@/lib/data'; \n\nexport const dynamic = 'force-dynamic'; // Ensure fresh data\n\nexport async function GET(\n  request: Request,\n  { params }: { params: { slug: string } }\n) {\n  const slug = params.slug;\n\n  if (!slug) {\n    return NextResponse.json({ message: 'Product slug is required' }, { status: 400 });\n  }\n\n  try {\n    const product = await getProductBySlug(slug); \n    if (!product) {\n      return NextResponse.json({ message: 'Product not found' }, { status: 404 });\n    }\n    // Ensure pricing_options is always an array, even if empty\n    const productWithGuaranteedPricingOptions = {\n      ...product,\n      pricing_options: (product.pricing_options || []).map(opt => ({\n        ...opt,\n        is_rub_payment_visible: opt.is_rub_payment_visible === undefined ? true : opt.is_rub_payment_visible,\n        is_gh_payment_visible: opt.is_gh_payment_visible === undefined ? true : opt.is_gh_payment_visible,\n        custom_payment_1_is_visible: opt.custom_payment_1_is_visible === undefined ? false : opt.custom_payment_1_is_visible,\n        custom_payment_2_is_visible: opt.custom_payment_2_is_visible === undefined ? false : opt.custom_payment_2_is_visible,\n      }))\n    };\n    return NextResponse.json(productWithGuaranteedPricingOptions);\n  } catch (error: any) {\n    console.error(`API Error fetching product ${slug}:`, error);\n    return NextResponse.json({ message: `Internal Server Error: ${error.message}` }, { status: 500 });\n  }\n}\n\n// Ensure there's a newline at the very end of the file content.\n\n    \n"],"names":[],"mappings":"AACA,uCAAuC;AACvC,uCAAuC;;;;;AAEvC;AACA;;;AAEO,MAAM,UAAU,iBAAiB,oBAAoB;AAErD,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAAgC;IAExC,MAAM,OAAO,OAAO,IAAI;IAExB,IAAI,CAAC,MAAM;QACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAClF;IAEA,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,oHAAA,CAAA,mBAAgB,AAAD,EAAE;QACvC,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QACA,2DAA2D;QAC3D,MAAM,sCAAsC;YAC1C,GAAG,OAAO;YACV,iBAAiB,CAAC,QAAQ,eAAe,IAAI,EAAE,EAAE,GAAG,CAAC,CAAA,MAAO,CAAC;oBAC3D,GAAG,GAAG;oBACN,wBAAwB,IAAI,sBAAsB,KAAK,YAAY,OAAO,IAAI,sBAAsB;oBACpG,uBAAuB,IAAI,qBAAqB,KAAK,YAAY,OAAO,IAAI,qBAAqB;oBACjG,6BAA6B,IAAI,2BAA2B,KAAK,YAAY,QAAQ,IAAI,2BAA2B;oBACpH,6BAA6B,IAAI,2BAA2B,KAAK,YAAY,QAAQ,IAAI,2BAA2B;gBACtH,CAAC;QACH;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC,EAAE;QACrD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;QAAC,GAAG;YAAE,QAAQ;QAAI;IACjG;AACF,EAEA,gEAAgE","debugId":null}}]
}