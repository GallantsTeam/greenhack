exports.id=4800,exports.ids=[4800],exports.modules={28303:e=>{function o(e){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}o.keys=()=>[],o.resolve=o,o.id=28303,e.exports=o},30035:(e,o,t)=>{"use strict";t.r(o),t.d(o,{"6089447028175c0572b15a7e03e70f832d763fe00d":()=>n.P});var n=t(75365)},42192:(e,o,t)=>{"use strict";t.d(o,{A6:()=>c,Dp:()=>d,Fm:()=>l,V5:()=>r,_q:()=>s});var n=t(75365);async function a(){console.log("[TelegramLib] Fetching Telegram configuration from DB...");try{let[e,o]=await Promise.all([(0,n.P)("SELECT * FROM site_telegram_settings WHERE id = ? LIMIT 1",[1]),(0,n.P)("SELECT * FROM admin_telegram_notification_prefs WHERE id = ? LIMIT 1",[1])]),t=Array.isArray(e)&&e.length>0?e[0]:null,a=Array.isArray(o)&&o.length>0?o[0]:null,r=a?{id:a.id,notify_admin_on_balance_deposit:!!a.notify_admin_on_balance_deposit,notify_admin_on_product_purchase:!!a.notify_admin_on_product_purchase,notify_admin_on_promo_code_creation:!!a.notify_admin_on_promo_code_creation,notify_admin_on_admin_login:!!a.notify_admin_on_admin_login,updated_at:a.updated_at}:null;return console.log("[TelegramLib] Fetched Telegram Settings:",t?{...t,client_bot_token:"***",admin_bot_token:"***"}:null),console.log("[TelegramLib] Fetched Admin Notification Prefs:",r),{telegramSettings:t,notificationPrefs:r}}catch(e){return console.error("[TelegramLib] Error fetching Telegram configuration:",e),{telegramSettings:null,notificationPrefs:null}}}async function r(e,o,t,n="MarkdownV2"){if(!e||!o||!t){let e="[TelegramLib] Send Error: Missing botToken, chatId, or message for Telegram.";return console.error(e),{success:!1,message:e}}let a=`https://api.telegram.org/bot${e}/sendMessage`;console.log(`[TelegramLib] Attempting to send message to ${o} via URL: ${a.replace(e,"***TOKEN***")}`);try{let e=await fetch(a,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({chat_id:o,text:t,parse_mode:n})}),r=await e.json();if(console.log(`[TelegramLib] Response from Telegram API for chat_id ${o}:`,r),r.ok)return console.log(`[TelegramLib] Message sent successfully to chat_id ${o}.`),{success:!0,message:`Message sent to ${o}`};return console.error("[TelegramLib] Telegram API Error:",r),{success:!1,message:`Telegram API Error: ${r.description}`,error:r}}catch(e){return console.error("[TelegramLib] Error sending Telegram message via fetch:",e),{success:!1,message:`Network or parsing error: ${e.message}`,error:e}}}function i(e){if(null==e)return"";let o=String(e),t=["_","*","[","]","(",")","~","`",">","#","+","-","=","|","{","}",".","!"];return o.split("").map(e=>t.includes(e)?`\\${e}`:e).join("")}async function s(e,o,t,n){console.log(`[TelegramLib] notifyAdminOnBalanceDeposit called for user: ${o} (ID: ${e}), amount: ${t}, reason: ${n}`);let{telegramSettings:s,notificationPrefs:c}=await a();if(!s?.admin_bot_token){console.log("[TelegramLib] notifyAdminOnBalanceDeposit check failed: Admin bot token not configured.");return}if(!s.admin_bot_chat_ids){console.log("[TelegramLib] notifyAdminOnBalanceDeposit check failed: Admin bot chat IDs not configured.");return}if(!c?.notify_admin_on_balance_deposit){console.log("[TelegramLib] notifyAdminOnBalanceDeposit check failed: Notification type is disabled in settings.");return}let l=n?`
Причина: \`${i(n)}\``:"",d=`💰 *Пополнение баланса*
Пользователь: \`${i(o)}\` (ID: \`${e}\`)
Сумма: \`+${i(t.toFixed(2))}\` GH${l}`,m=s.admin_bot_chat_ids.split(",").map(e=>e.trim()).filter(e=>e);for(let e of(console.log(`[TelegramLib] Prepared balance deposit notification. Admin chat IDs: ${m.join(", ")}`),m))try{console.log(`[TelegramLib] Attempting to send balance deposit notification to admin chat ID: ${e}`);let o=await r(s.admin_bot_token,e,d);o.success||console.error(`[TelegramLib] Failed to send balance deposit notification to ${e}:`,o.message,o.error)}catch(o){console.error(`[TelegramLib] CRITICAL ERROR sending balance deposit notification to ${e}:`,o)}}async function c(e,o,t,n,s){console.log(`[TelegramLib] notifyAdminOnProductPurchase called for user: ${o}, product: ${t}, amount: ${s}`);let{telegramSettings:c,notificationPrefs:l}=await a();if(!c?.admin_bot_token||!c.admin_bot_chat_ids||!l?.notify_admin_on_product_purchase){console.log("[TelegramLib] notifyAdminOnProductPurchase check failed: Bot token, chat IDs, or setting disabled.");return}let d=n?` (${i(n)} дн\\.)`:"",m=`🛍️ *Новая покупка товара*
Пользователь: \`${i(o)}\` (ID: \`${e}\`)
Товар: \`${i(t)}\`${d}
Сумма: \`${i(s.toFixed(2))}\` GH`,g=c.admin_bot_chat_ids.split(",").map(e=>e.trim()).filter(e=>e);for(let e of(console.log(`[TelegramLib] Prepared product purchase notification. Admin chat IDs: ${g.join(", ")}`),g))try{console.log(`[TelegramLib] Attempting to send product purchase notification to admin chat ID: ${e}`);let o=await r(c.admin_bot_token,e,m);o.success||console.error(`[TelegramLib] Failed to send product purchase notification to ${e}:`,o.message,o.error)}catch(o){console.error(`[TelegramLib] CRITICAL ERROR sending product purchase notification to ${e}:`,o)}}async function l(e,o){console.log(`[TelegramLib] notifyAdminOnPromoCodeCreation called for code: ${o.code}, created by: ${e||"System"}`);let{telegramSettings:t,notificationPrefs:n}=await a();if(!t?.admin_bot_token||!t.admin_bot_chat_ids||!n?.notify_admin_on_promo_code_creation){console.log("[TelegramLib] notifyAdminOnPromoCodeCreation check failed: Bot token, chat IDs, or setting disabled.");return}let s="";if("balance_gh"===o.type&&o.value_gh)s=`Баланс: \`${i(o.value_gh.toFixed(2))}\` GH`;else if("product"===o.type&&o.product_name){let e=o.duration_days?` (${i(o.duration_days)} дн\\.)`:"";s=`Товар: \`${i(o.product_name)}\`${e}`}let c=`🎁 *Создан новый промокод*
Код: \`${i(o.code)}\`
Тип: \`${i(o.type)}\`
Награда: ${s}
Макс\\. использований: \`${o.max_uses}\`
Истекает: \`${o.expires_at?i(new Date(o.expires_at).toLocaleString("ru-RU")):"Бессрочно"}\`
${e?`Создал: \`${i(e)}\``:"Создан системой"}`,l=t.admin_bot_chat_ids.split(",").map(e=>e.trim()).filter(e=>e);for(let e of(console.log(`[TelegramLib] Prepared promo code creation notification. Admin chat IDs: ${l.join(", ")}`),l))try{console.log(`[TelegramLib] Attempting to send promo code creation notification to admin chat ID: ${e}`);let o=await r(t.admin_bot_token,e,c);o.success||console.error(`[TelegramLib] Failed to send promo code creation notification to ${e}:`,o.message,o.error)}catch(o){console.error(`[TelegramLib] CRITICAL ERROR sending promo code creation notification to ${e}:`,o)}}async function d(e,o){console.log(`[TelegramLib] sendKeyActivationRequestToAdmin called for item ID: ${e.id}, user: ${o.username}`);let{telegramSettings:t,notificationPrefs:n}=await a(),r=t?.key_bot_token||process.env.TELEGRAM_KEY_BOT_TOKEN,s=t?.key_bot_admin_chat_ids||process.env.TELEGRAM_KEY_BOT_ADMIN_CHAT_IDS;if(!r){let e="[TelegramLib] Key Bot token not configured.";return console.error(e),{success:!1,message:e}}if(!s){let e="[TelegramLib] Key Bot admin chat IDs not configured.";return console.error(e),{success:!1,message:e}}let c=e.product_name||"Неизвестный товар",l=e.duration_days?` (${e.duration_days} дн.)`:"",d=e.mode_label?` [${e.mode_label}]`:"",m=e.activation_code||"Ключ не указан",g=`🔑 *Запрос на активацию ключа*
Пользователь: \`${i(o.username)}\` (ID: \`${o.id}\`)
Товар: \`${i(c)}${i(l)}${i(d)}\`
Инвентарь ID: \`${e.id}\`
Предоставленный ключ: \`${i(m)}\``,_=[[{text:"✅ Активировать",callback_data:`activate_key:${e.id}`},{text:"❌ Отклонить",callback_data:`reject_key:${e.id}`}]],u=s.split(",").map(e=>e.trim()).filter(e=>e),f=!0,p=null;for(let e of(console.log(`[TelegramLib] Prepared key activation request notification. Key Bot Admin chat IDs: ${u.join(", ")}`),u))try{console.log(`[TelegramLib] Attempting to send key activation request to admin chat ID: ${e} using Key Bot`);let o=`https://api.telegram.org/bot${r}/sendMessage`,t=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({chat_id:e,text:g,parse_mode:"MarkdownV2",reply_markup:{inline_keyboard:_}})}),n=await t.json();console.log(`[TelegramLib] Response from Telegram API for key activation request to chat_id ${e}:`,n),n.ok?console.log(`[TelegramLib] Key activation request sent successfully to ${e}.`):(f=!1,p||(p={success:!1,message:`Telegram API Error: ${n.description}`,error:n}),console.error(`[TelegramLib] Failed to send key activation request to ${e}:`,n.description))}catch(o){f=!1,p||(p={success:!1,message:`Network or parsing error for key activation: ${o.message}`,error:o}),console.error(`[TelegramLib] CRITICAL ERROR sending key activation request to ${e}:`,o)}return f?{success:!0,message:"Уведомление администратору отправлено."}:p||{success:!1,message:"Неизвестная ошибка при отправке уведомлений администратору."}}},75365:(e,o,t)=>{"use strict";t.d(o,{P:()=>c});var n=t(67218);t(79130);var a=t(46101),r=t(17478);let i={host:process.env.DB_HOST,user:process.env.DB_USER,password:process.env.DB_PASSWORD,database:process.env.DB_NAME,connectionLimit:10,namedPlaceholders:!0},s=null;async function c(e,o){let t;let n=function(){if(!s){if(!process.env.DB_HOST||!process.env.DB_USER||!process.env.DB_NAME)throw console.error("Database environment variables DB_HOST, DB_USER, or DB_NAME are not set."),Error("Database environment variables are not fully set. Please check your .env.local file.");try{s=a.createPool(i),console.log("MySQL connection pool created successfully."),s.getConnection().then(e=>{console.log("Successfully connected to database via pool."),e.release()}).catch(e=>{console.error("Failed to get a connection from pool on startup:",e)})}catch(e){throw console.error("Failed to create MySQL connection pool:",e),s=null,Error("Database connection pool could not be created.")}}return s}();try{t=await n.getConnection(),console.log(`Executing SQL: ${e} with params: ${o?JSON.stringify(o):"No params"}`);let[a]=await t.execute(e,o);return a}catch(e){throw console.error("Database query error:",e.message,e.code,e.sqlMessage,e.sql),Error(`Database query failed: ${e.message}`)}finally{t&&t.release()}}(0,r.D)([c]),(0,n.A)(c,"6089447028175c0572b15a7e03e70f832d763fe00d",null)},78335:()=>{},96487:()=>{}};