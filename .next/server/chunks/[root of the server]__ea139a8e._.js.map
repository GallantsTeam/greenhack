{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mysql.ts"],"sourcesContent":["\n'use server'; // Add this directive\n\nimport mysql from 'mysql2/promise';\n\nconst connectionConfig = {\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  connectionLimit: 10, // Optional: connection pool limit\n  namedPlaceholders: true, // Important for using object parameters\n  // Add SSL options if your Jino.ru MySQL requires it\n  // ssl: {\n  //   // ca: fs.readFileSync('/path/to/ca-cert.pem'), // if you have a CA cert\n  //   rejectUnauthorized: false // Be cautious with this in production, true is more secure\n  // }\n};\n\nlet pool: mysql.Pool | null = null;\n\nfunction getPool(): mysql.Pool {\n  if (!pool) {\n    if (!process.env.DB_HOST || !process.env.DB_USER || !process.env.DB_NAME) { // Password can be empty for some local setups\n      console.error(\"Database environment variables DB_HOST, DB_USER, or DB_NAME are not set.\");\n      throw new Error(\"Database environment variables are not fully set. Please check your .env.local file.\");\n    }\n    try {\n      pool = mysql.createPool(connectionConfig);\n      console.log(\"MySQL connection pool created successfully.\");\n\n      // Test the pool by getting a connection (optional, but good for early feedback)\n      pool.getConnection()\n        .then(connection => {\n          console.log(\"Successfully connected to database via pool.\");\n          connection.release();\n        })\n        .catch(err => {\n          console.error(\"Failed to get a connection from pool on startup:\", err);\n          // Depending on severity, you might want to invalidate the pool or exit\n          // For now, we'll let further queries fail if the pool is truly unusable.\n        });\n\n    } catch (error) {\n      console.error(\"Failed to create MySQL connection pool:\", error);\n      // Ensure pool remains null if creation fails\n      pool = null;\n      throw new Error(\"Database connection pool could not be created.\");\n    }\n  }\n  return pool;\n}\n\nexport async function query(sql: string, params?: any[] | object): Promise<any> {\n  const currentPool = getPool(); // This will throw if pool cannot be initialized\n\n  let connection;\n  try {\n    connection = await currentPool.getConnection();\n    console.log(`Executing SQL: ${sql} with params: ${params ? JSON.stringify(params) : 'No params'}`);\n    const [results] = await connection.execute(sql, params);\n    return results;\n  } catch (error: any) {\n    console.error('Database query error:', error.message, error.code, error.sqlMessage, error.sql);\n    throw new Error(`Database query failed: ${error.message}`);\n  } finally {\n    if (connection) {\n      connection.release();\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAEA,MAAM,mBAAmB;IACvB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,iBAAiB;IACjB,mBAAmB;AAMrB;AAEA,IAAI,OAA0B;AAE9B,SAAS;IACP,IAAI,CAAC,MAAM;QACT,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,EAAE;YACxE,QAAQ,KAAK,CAAC;YACd,MAAM,IAAI,MAAM;QAClB;QACA,IAAI;YACF,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;YACxB,QAAQ,GAAG,CAAC;YAEZ,gFAAgF;YAChF,KAAK,aAAa,GACf,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,WAAW,OAAO;YACpB,GACC,KAAK,CAAC,CAAA;gBACL,QAAQ,KAAK,CAAC,oDAAoD;YAClE,uEAAuE;YACvE,yEAAyE;YAC3E;QAEJ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2CAA2C;YACzD,6CAA6C;YAC7C,OAAO;YACP,MAAM,IAAI,MAAM;QAClB;IACF;IACA,OAAO;AACT;AAEO,eAAe,uCAAG,GAAH,MAAM,GAAW,EAAE,MAAuB;IAC9D,MAAM,cAAc,WAAW,gDAAgD;IAE/E,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,YAAY,aAAa;QAC5C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,IAAI,cAAc,EAAE,SAAS,KAAK,SAAS,CAAC,UAAU,aAAa;QACjG,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW,OAAO,CAAC,KAAK;QAChD,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO,EAAE,MAAM,IAAI,EAAE,MAAM,UAAU,EAAE,MAAM,GAAG;QAC7F,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;IAC3D,SAAU;QACR,IAAI,YAAY;YACd,WAAW,OAAO;QACpB;IACF;AACF;;;IAjBsB;;AAAA,iPAAA","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/admin/products/route.ts"],"sourcesContent":["\n// src/app/api/admin/products/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\nimport { query } from '@/lib/mysql';\nimport type { Product, ProductPricingOption } from '@/types';\nimport type { OkPacket, ResultSetHeader } from 'mysql2';\n\nexport const dynamic = 'force-dynamic'; \n\nexport async function GET(request: NextRequest) {\n  try {\n    const productsData = await query(\n      `SELECT \n         p.id, p.name, p.slug, p.game_slug, p.image_url, \n         p.status, p.status_text, \n         p.short_description, p.long_description, p.data_ai_hint,\n         p.mode, p.gallery_image_urls,\n         p.functions_aim_title, p.functions_aim, p.functions_aim_description,\n         p.functions_esp_title, p.functions_wallhack, p.functions_esp_description,\n         p.functions_misc_title, p.functions_misc, p.functions_misc_description,\n         p.system_os, p.system_build, p.system_gpu, p.system_cpu,\n         p.price_text,\n         p.retrieval_modal_intro_text,\n         p.retrieval_modal_antivirus_text,\n         p.retrieval_modal_antivirus_link_text,\n         p.retrieval_modal_antivirus_link_url,\n         p.retrieval_modal_launcher_text,\n         p.retrieval_modal_launcher_link_text,\n         p.retrieval_modal_launcher_link_url,\n         p.retrieval_modal_key_paste_text,\n         p.retrieval_modal_support_text,\n         p.retrieval_modal_support_link_text,\n         p.retrieval_modal_support_link_url,\n         p.retrieval_modal_how_to_run_link,\n         p.activation_type, p.loader_download_url, p.info_modal_content_html, \n         p.info_modal_support_link_text, p.info_modal_support_link_url,\n         p.created_at, p.updated_at,\n         (SELECT MIN(ppo.price_rub) FROM product_pricing_options ppo WHERE ppo.product_id = p.id AND ppo.is_rub_payment_visible = TRUE) as min_price_rub_calculated,\n         (SELECT MIN(ppo.price_gh) FROM product_pricing_options ppo WHERE ppo.product_id = p.id AND ppo.is_gh_payment_visible = TRUE) as min_price_gh_calculated,\n         COALESCE(g.name, p.game_slug) as gameName,\n         g.logo_url as gameLogoUrl,\n         g.platform as gamePlatform\n       FROM products p\n       LEFT JOIN games g ON p.game_slug = g.slug \n       ORDER BY p.created_at DESC, p.name ASC`\n    );\n\n    if (!Array.isArray(productsData)) {\n      console.error('API Admin Products GET Error: Expected an array from database query, received:', productsData);\n      return NextResponse.json({ message: 'Failed to retrieve products: unexpected database response format.' }, { status: 500 });\n    }\n\n    const products: Product[] = productsData.map((row: any) => ({\n      id: String(row.id).trim(),\n      name: row.name,\n      slug: String(row.slug).trim(),\n      game_slug: String(row.game_slug).trim(),\n      image_url: row.image_url ? String(row.image_url).trim() : null,\n      imageUrl: (row.image_url || `https://placehold.co/300x350.png?text=${encodeURIComponent(row.name)}`).trim(),\n      status: (row.status ? String(row.status).toLowerCase() : 'unknown') as Product['status'],\n      status_text: row.status_text,\n      price: parseFloat(row.min_price_rub_calculated || '0'), \n      min_price_rub: row.min_price_rub_calculated ? parseFloat(row.min_price_rub_calculated) : undefined,\n      min_price_gh: row.min_price_gh_calculated ? parseFloat(row.min_price_gh_calculated) : undefined,\n      price_text: row.price_text,\n      short_description: row.short_description,\n      long_description: row.long_description,\n      data_ai_hint: row.data_ai_hint || `${String(row.name).toLowerCase()} product`,\n      mode: row.mode,\n      gallery_image_urls: row.gallery_image_urls ? String(row.gallery_image_urls).split(',').map((url: string) => url.trim()).filter(Boolean) : [],\n      functions_aim_title: row.functions_aim_title || 'Aimbot Функции',\n      functions_aim: row.functions_aim ? String(row.functions_aim).split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n      functions_aim_description: row.functions_aim_description,\n      functions_esp_title: row.functions_esp_title || 'ESP/Wallhack Функции',\n      functions_wallhack: row.functions_wallhack ? String(row.functions_wallhack).split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n      functions_esp_description: row.functions_esp_description,\n      functions_misc_title: row.functions_misc_title || 'Прочие Функции',\n      functions_misc: row.functions_misc ? String(row.functions_misc).split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n      functions_misc_description: row.functions_misc_description,\n      system_os: row.system_os,\n      system_build: row.system_build,\n      system_gpu: row.system_gpu,\n      system_cpu: row.system_cpu,\n      retrieval_modal_intro_text: row.retrieval_modal_intro_text,\n      retrieval_modal_antivirus_text: row.retrieval_modal_antivirus_text,\n      retrieval_modal_antivirus_link_text: row.retrieval_modal_antivirus_link_text,\n      retrieval_modal_antivirus_link_url: row.retrieval_modal_antivirus_link_url,   \n      retrieval_modal_launcher_text: row.retrieval_modal_launcher_text,\n      retrieval_modal_launcher_link_text: row.retrieval_modal_launcher_link_text,\n      retrieval_modal_launcher_link_url: row.retrieval_modal_launcher_link_url,   \n      retrieval_modal_key_paste_text: row.retrieval_modal_key_paste_text,\n      retrieval_modal_support_text: row.retrieval_modal_support_text,\n      retrieval_modal_support_link_text: row.retrieval_modal_support_link_text,\n      retrieval_modal_support_link_url: row.retrieval_modal_support_link_url,   \n      retrieval_modal_how_to_run_link: row.retrieval_modal_how_to_run_link,\n      activation_type: row.activation_type || 'info_modal',\n      loader_download_url: row.loader_download_url,\n      info_modal_content_html: row.info_modal_content_html,\n      info_modal_support_link_text: row.info_modal_support_link_text,\n      info_modal_support_link_url: row.info_modal_support_link_url,\n      created_at: row.created_at,\n      updated_at: row.updated_at,\n      gameName: row.gameName,\n      gameLogoUrl: row.gameLogoUrl ? String(row.gameLogoUrl).trim() : null,\n      gamePlatform: row.gamePlatform, \n    }));\n\n    return NextResponse.json(products, { status: 200 });\n  } catch (error: any) {\n    console.error('API Admin Products GET Error:', error);\n    return NextResponse.json({ message: `Internal Server Error: ${error.message}`, error_details: error.toString() }, { status: 500 });\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  let body;\n  try {\n    body = await request.json();\n    const {\n      id, \n      name,\n      slug,\n      game_slug: raw_game_slug, \n      status,\n      pricing_options,\n      activation_type, // New activation fields\n      loader_download_url,\n      info_modal_content_html,\n      info_modal_support_link_text,\n      info_modal_support_link_url,\n      ...optionalFieldsData\n    } = body;\n\n    const trimmedId = id ? String(id).trim() : null;\n    const trimmedSlug = slug ? String(slug).trim() : null;\n    const trimmedGameSlug = raw_game_slug ? String(raw_game_slug).trim() : null;\n\n\n    if (!trimmedId || !name || !trimmedSlug || !trimmedGameSlug || !status) {\n      return NextResponse.json({ message: 'ID, Name, Slug, Game Slug, and Status are required.' }, { status: 400 });\n    }\n    if (trimmedId !== trimmedSlug) {\n        return NextResponse.json({ message: 'Product ID and Slug must match for new products.' }, { status: 400 });\n    }\n\n    const existingProduct = await query('SELECT id FROM products WHERE id = ? OR slug = ?', [trimmedId, trimmedSlug]);\n    if (Array.isArray(existingProduct) && existingProduct.length > 0) {\n      return NextResponse.json({ message: 'Product with this ID or Slug already exists.' }, { status: 409 });\n    }\n    \n    const productFieldsToInsert: Record<string, any> = {\n      id: trimmedId, \n      name, \n      slug: trimmedSlug, \n      game_slug: trimmedGameSlug, \n      status, \n      activation_type: activation_type || 'info_modal',\n      loader_download_url: loader_download_url || null,\n      info_modal_content_html: info_modal_content_html || null,\n      info_modal_support_link_text: info_modal_support_link_text || null,\n      info_modal_support_link_url: info_modal_support_link_url || null,\n      created_at: new Date(), updated_at: new Date(),\n      functions_aim_title: optionalFieldsData.functions_aim_title || 'Aimbot Функции',\n      functions_esp_title: optionalFieldsData.functions_esp_title || 'ESP/Wallhack Функции',\n      functions_misc_title: optionalFieldsData.functions_misc_title || 'Прочие Функции',\n    };\n    \n    const allOptionalFieldKeys: (keyof Product)[] = [\n        'image_url', 'status_text', 'short_description', 'long_description', 'data_ai_hint', 'mode',\n        'gallery_image_urls', \n        'functions_aim', 'functions_aim_description',\n        'functions_wallhack', 'functions_esp_description',\n        'functions_misc', 'functions_misc_description',\n        'system_os', 'system_build', 'system_gpu', 'system_cpu', 'price_text',\n        'retrieval_modal_intro_text', 'retrieval_modal_antivirus_text', 'retrieval_modal_antivirus_link_text', 'retrieval_modal_antivirus_link_url',\n        'retrieval_modal_launcher_text', 'retrieval_modal_launcher_link_text', 'retrieval_modal_launcher_link_url',\n        'retrieval_modal_key_paste_text', 'retrieval_modal_support_text', 'retrieval_modal_support_link_text', 'retrieval_modal_support_link_url',\n        'retrieval_modal_how_to_run_link',\n    ];\n\n    allOptionalFieldKeys.forEach(key => {\n        if (optionalFieldsData[key] !== undefined) {\n            if (key === 'gallery_image_urls' && Array.isArray(optionalFieldsData[key])) {\n                 productFieldsToInsert[key] = (optionalFieldsData[key] as string[]).join(',');\n            } else {\n                productFieldsToInsert[key] = optionalFieldsData[key] === '' ? null : optionalFieldsData[key];\n            }\n        }\n    });\n    \n    const columns = Object.keys(productFieldsToInsert);\n    const placeholders = columns.map(() => '?').join(', ');\n    const productParams = Object.values(productFieldsToInsert);\n    \n    const productInsertQuery = `INSERT INTO products (${columns.join(', ')}) VALUES (${placeholders})`;\n    \n    const productResult = await query(productInsertQuery, productParams) as OkPacket | ResultSetHeader | any[];\n\n    let productAffectedRows = 0;\n    if (productResult && 'affectedRows' in productResult && !Array.isArray(productResult)) {\n        productAffectedRows = (productResult as OkPacket).affectedRows;\n    } else if (Array.isArray(productResult) && productResult.length > 0 && 'affectedRows' in productResult[0]) {\n        productAffectedRows = productResult[0].affectedRows;\n    }\n\n    if (productAffectedRows > 0) {\n      const productIdForOptions = trimmedId; \n\n      if (pricing_options && Array.isArray(pricing_options) && pricing_options.length > 0) {\n        for (const option of pricing_options) {\n          const { \n            duration_days, price_rub, price_gh, mode_label,\n            is_rub_payment_visible, is_gh_payment_visible,\n            custom_payment_1_label, custom_payment_1_price_rub, custom_payment_1_link, custom_payment_1_is_visible,\n            custom_payment_2_label, custom_payment_2_price_rub, custom_payment_2_link, custom_payment_2_is_visible\n          } = option;\n          await query(\n            `INSERT INTO product_pricing_options (\n                product_id, duration_days, price_rub, price_gh, mode_label,\n                is_rub_payment_visible, is_gh_payment_visible,\n                custom_payment_1_label, custom_payment_1_price_rub, custom_payment_1_link, custom_payment_1_is_visible,\n                custom_payment_2_label, custom_payment_2_price_rub, custom_payment_2_link, custom_payment_2_is_visible\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n            [\n                productIdForOptions, duration_days, price_rub, price_gh, mode_label || null,\n                is_rub_payment_visible === undefined ? true : Boolean(is_rub_payment_visible),\n                is_gh_payment_visible === undefined ? true : Boolean(is_gh_payment_visible),\n                custom_payment_1_label || null, custom_payment_1_price_rub || null, custom_payment_1_link || null, Boolean(custom_payment_1_is_visible),\n                custom_payment_2_label || null, custom_payment_2_price_rub || null, custom_payment_2_link || null, Boolean(custom_payment_2_is_visible)\n            ]\n          );\n        }\n      }\n\n      const newProductDataResult = await query(\n        `SELECT \n            p.*,\n            (SELECT MIN(ppo_in.price_rub) FROM product_pricing_options ppo_in WHERE ppo_in.product_id = p.id AND ppo_in.is_rub_payment_visible = TRUE) as min_price_rub_calculated,\n            (SELECT MIN(ppo_in.price_gh) FROM product_pricing_options ppo_in WHERE ppo_in.product_id = p.id AND ppo_in.is_gh_payment_visible = TRUE) as min_price_gh_calculated,\n            COALESCE(g.name, p.game_slug) as gameName,\n            g.logo_url as gameLogoUrl,\n            g.platform as gamePlatform\n         FROM products p\n         LEFT JOIN games g ON p.game_slug = g.slug\n         WHERE p.id = ?`, [productIdForOptions]);\n\n       if (!Array.isArray(newProductDataResult) || newProductDataResult.length === 0) {\n        console.error('Failed to fetch newly created product from DB:', productIdForOptions);\n        return NextResponse.json({ message: 'Товар создан, но не удалось получить его обновленные данные.' }, { status: 500 });\n      }\n      const row = newProductDataResult[0];\n      const newProductItem: Product = {\n        id: String(row.id).trim(),\n        name: row.name,\n        slug: String(row.slug).trim(),\n        game_slug: String(row.game_slug).trim(),\n        image_url: row.image_url ? String(row.image_url).trim() : null,\n        imageUrl: (row.image_url || `https://placehold.co/300x350.png?text=${encodeURIComponent(row.name)}`).trim(),\n        status: row.status || 'unknown',\n        status_text: row.status_text,\n        price: parseFloat(row.min_price_rub_calculated || '0'), \n        min_price_rub: row.min_price_rub_calculated ? parseFloat(row.min_price_rub_calculated) : undefined,\n        min_price_gh: row.min_price_gh_calculated ? parseFloat(row.min_price_gh_calculated) : undefined,\n        price_text: row.price_text,\n        short_description: row.short_description,\n        long_description: row.long_description,\n        data_ai_hint: row.data_ai_hint || `${String(row.name).toLowerCase()} product`,\n        mode: row.mode,\n        gallery_image_urls: row.gallery_image_urls ? String(row.gallery_image_urls).split(',').map((url: string) => url.trim()).filter(Boolean) : [],\n        functions_aim_title: row.functions_aim_title,\n        functions_aim: row.functions_aim ? String(row.functions_aim).split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n        functions_aim_description: row.functions_aim_description,\n        functions_esp_title: row.functions_esp_title,\n        functions_wallhack: row.functions_wallhack ? String(row.functions_wallhack).split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n        functions_esp_description: row.functions_esp_description,\n        functions_misc_title: row.functions_misc_title,\n        functions_misc: row.functions_misc ? String(row.functions_misc).split(',').map((fn: string) => fn.trim()).filter(Boolean) : [],\n        functions_misc_description: row.functions_misc_description,\n        system_os: row.system_os,\n        system_build: row.system_build,\n        system_gpu: row.system_gpu,\n        system_cpu: row.system_cpu,\n        pricing_options: [], \n        retrieval_modal_intro_text: row.retrieval_modal_intro_text,\n        retrieval_modal_antivirus_text: row.retrieval_modal_antivirus_text,\n        retrieval_modal_antivirus_link_text: row.retrieval_modal_antivirus_link_text, \n        retrieval_modal_antivirus_link_url: row.retrieval_modal_antivirus_link_url,   \n        retrieval_modal_launcher_text: row.retrieval_modal_launcher_text,\n        retrieval_modal_launcher_link_text: row.retrieval_modal_launcher_link_text, \n        retrieval_modal_launcher_link_url: row.retrieval_modal_launcher_link_url,   \n        retrieval_modal_key_paste_text: row.retrieval_modal_key_paste_text,\n        retrieval_modal_support_text: row.retrieval_modal_support_text,\n        retrieval_modal_support_link_text: row.retrieval_modal_support_link_text, \n        retrieval_modal_support_link_url: row.retrieval_modal_support_link_url,   \n        retrieval_modal_how_to_run_link: row.retrieval_modal_how_to_run_link,\n        activation_type: row.activation_type || 'info_modal',\n        loader_download_url: row.loader_download_url,\n        info_modal_content_html: row.info_modal_content_html,\n        info_modal_support_link_text: row.info_modal_support_link_text,\n        info_modal_support_link_url: row.info_modal_support_link_url,\n        created_at: row.created_at,\n        updated_at: row.updated_at,\n        gameName: row.gameName,\n        gameLogoUrl: row.gameLogoUrl ? String(row.gameLogoUrl).trim() : null,\n        gamePlatform: row.gamePlatform,\n      };\n      return NextResponse.json({ message: 'Товар успешно создан', product: newProductItem }, { status: 201 });\n    } else {\n      console.error('Product creation in DB failed, no affected rows:', productResult);\n      return NextResponse.json({ message: 'Не удалось создать товар в базе данных.' }, { status: 500 });\n    }\n\n  } catch (error: any) {\n    console.error('API Admin Products POST Error:', error);\n    const requestBodyForLog = body || \"Could not parse request body for logging\";\n    console.error('Request body was:', JSON.stringify(requestBodyForLog, null, 2));\n\n    if (error.code === 'ER_NO_REFERENCED_ROW_2' || (error.message && error.message.includes('foreign key constraint fails'))) {\n        return NextResponse.json({ message: `Ошибка внешнего ключа: Убедитесь, что указанный 'game_slug' (${(body as any)?.game_slug?.trim()}) существует в таблице категорий (games).`, error_details: error.toString() }, { status: 400 });\n    }\n    if (error.code === 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD') {\n        return NextResponse.json({ message: `Ошибка типа данных: Пожалуйста, проверьте правильность введенных числовых значений (например, цена, ID).`, error_details: error.toString() }, { status: 400 });\n    }\n    return NextResponse.json({ message: `Internal Server Error: ${error.message}`, error_details: error.toString() }, { status: 500 });\n  }\n}\n    \n"],"names":[],"mappings":"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","debugId":null}}]
}