{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mysql.ts"],"sourcesContent":["\n'use server'; // Add this directive\n\nimport mysql from 'mysql2/promise';\n\nconst connectionConfig = {\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  connectionLimit: 10, // Optional: connection pool limit\n  namedPlaceholders: true, // Important for using object parameters\n  // Add SSL options if your Jino.ru MySQL requires it\n  // ssl: {\n  //   // ca: fs.readFileSync('/path/to/ca-cert.pem'), // if you have a CA cert\n  //   rejectUnauthorized: false // Be cautious with this in production, true is more secure\n  // }\n};\n\nlet pool: mysql.Pool | null = null;\n\nfunction getPool(): mysql.Pool {\n  if (!pool) {\n    if (!process.env.DB_HOST || !process.env.DB_USER || !process.env.DB_NAME) { // Password can be empty for some local setups\n      console.error(\"Database environment variables DB_HOST, DB_USER, or DB_NAME are not set.\");\n      throw new Error(\"Database environment variables are not fully set. Please check your .env.local file.\");\n    }\n    try {\n      pool = mysql.createPool(connectionConfig);\n      console.log(\"MySQL connection pool created successfully.\");\n\n      // Test the pool by getting a connection (optional, but good for early feedback)\n      pool.getConnection()\n        .then(connection => {\n          console.log(\"Successfully connected to database via pool.\");\n          connection.release();\n        })\n        .catch(err => {\n          console.error(\"Failed to get a connection from pool on startup:\", err);\n          // Depending on severity, you might want to invalidate the pool or exit\n          // For now, we'll let further queries fail if the pool is truly unusable.\n        });\n\n    } catch (error) {\n      console.error(\"Failed to create MySQL connection pool:\", error);\n      // Ensure pool remains null if creation fails\n      pool = null;\n      throw new Error(\"Database connection pool could not be created.\");\n    }\n  }\n  return pool;\n}\n\nexport async function query(sql: string, params?: any[] | object): Promise<any> {\n  const currentPool = getPool(); // This will throw if pool cannot be initialized\n\n  let connection;\n  try {\n    connection = await currentPool.getConnection();\n    console.log(`Executing SQL: ${sql} with params: ${params ? JSON.stringify(params) : 'No params'}`);\n    const [results] = await connection.execute(sql, params);\n    return results;\n  } catch (error: any) {\n    console.error('Database query error:', error.message, error.code, error.sqlMessage, error.sql);\n    throw new Error(`Database query failed: ${error.message}`);\n  } finally {\n    if (connection) {\n      connection.release();\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAEA,MAAM,mBAAmB;IACvB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,iBAAiB;IACjB,mBAAmB;AAMrB;AAEA,IAAI,OAA0B;AAE9B,SAAS;IACP,IAAI,CAAC,MAAM;QACT,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,EAAE;YACxE,QAAQ,KAAK,CAAC;YACd,MAAM,IAAI,MAAM;QAClB;QACA,IAAI;YACF,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;YACxB,QAAQ,GAAG,CAAC;YAEZ,gFAAgF;YAChF,KAAK,aAAa,GACf,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,WAAW,OAAO;YACpB,GACC,KAAK,CAAC,CAAA;gBACL,QAAQ,KAAK,CAAC,oDAAoD;YAClE,uEAAuE;YACvE,yEAAyE;YAC3E;QAEJ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2CAA2C;YACzD,6CAA6C;YAC7C,OAAO;YACP,MAAM,IAAI,MAAM;QAClB;IACF;IACA,OAAO;AACT;AAEO,eAAe,uCAAG,GAAH,MAAM,GAAW,EAAE,MAAuB;IAC9D,MAAM,cAAc,WAAW,gDAAgD;IAE/E,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,YAAY,aAAa;QAC5C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,IAAI,cAAc,EAAE,SAAS,KAAK,SAAS,CAAC,UAAU,aAAa;QACjG,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW,OAAO,CAAC,KAAK;QAChD,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO,EAAE,MAAM,IAAI,EAAE,MAAM,UAAU,EAAE,MAAM,GAAG;QAC7F,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;IAC3D,SAAU;QACR,IAAI,YAAY;YACd,WAAW,OAAO;QACpB;IACF;AACF;;;IAjBsB;;AAAA,iPAAA","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/admin/products/%5Bslug%5D/route.ts"],"sourcesContent":["\n// src/app/api/admin/products/[slug]/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\nimport { query } from '@/lib/mysql';\nimport type { Product, ProductPricingOption } from '@/types';\nimport type { OkPacket, ResultSetHeader } from 'mysql2';\n\nexport const dynamic = 'force-dynamic';\n\nasync function getProductBySlugForUpdate(slug: string): Promise<Product | null> {\n    const productResults = await query(\n      `SELECT \n         p.*,\n         COALESCE(g.name, p.game_slug) as gameName,\n         g.logo_url as gameLogoUrl \n       FROM products p\n       LEFT JOIN games g ON p.game_slug = g.slug\n       WHERE p.slug = ?`, [String(slug).trim()]); // Trim slug for query\n    if (!Array.isArray(productResults) || productResults.length === 0) return null;\n\n    const productData = productResults[0];\n    \n    productData.id = String(productData.id).trim();\n    productData.slug = String(productData.slug).trim();\n    productData.game_slug = String(productData.game_slug).trim();\n    productData.gallery_image_urls = productData.gallery_image_urls ? String(productData.gallery_image_urls).split(',').map((url: string) => url.trim()) : [];\n    productData.functions_aim = productData.functions_aim ? String(productData.functions_aim).split(',').map((fn: string) => fn.trim()) : [];\n    productData.functions_wallhack = productData.functions_wallhack ? String(productData.functions_wallhack).split(',').map((fn: string) => fn.trim()) : [];\n    productData.functions_misc = productData.functions_misc ? String(productData.functions_misc).split(',').map((fn: string) => fn.trim()) : [];\n    \n    productData.functions_aim_title = productData.functions_aim_title || 'Aimbot Функции';\n    productData.functions_esp_title = productData.functions_esp_title || 'ESP/Wallhack Функции';\n    productData.functions_misc_title = productData.functions_misc_title || 'Прочие Функции';\n    \n    return productData as Product;\n}\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { slug: string } }\n) {\n  const productSlug = params.slug ? String(params.slug).trim() : null;\n  if (!productSlug) {\n    return NextResponse.json({ message: 'Product slug is required' }, { status: 400 });\n  }\n  try {\n    const product = await getProductBySlugForUpdate(productSlug);\n    if (!product) {\n      return NextResponse.json({ message: 'Product not found' }, { status: 404 });\n    }\n    const pricingOptionsResults = await query(\n      'SELECT * FROM product_pricing_options WHERE product_id = ? ORDER BY duration_days ASC, mode_label ASC',\n      [product.id] \n    );\n    product.pricing_options = pricingOptionsResults.map((opt: any) => ({\n      ...opt,\n      product_id: String(opt.product_id).trim(),\n      price_rub: parseFloat(opt.price_rub),\n      price_gh: parseFloat(opt.price_gh),\n      is_rub_payment_visible: opt.is_rub_payment_visible === undefined ? true : Boolean(opt.is_rub_payment_visible),\n      is_gh_payment_visible: opt.is_gh_payment_visible === undefined ? true : Boolean(opt.is_gh_payment_visible),\n      custom_payment_1_label: opt.custom_payment_1_label,\n      custom_payment_1_price_rub: opt.custom_payment_1_price_rub ? parseFloat(opt.custom_payment_1_price_rub) : null,\n      custom_payment_1_link: opt.custom_payment_1_link,\n      custom_payment_1_is_visible: Boolean(opt.custom_payment_1_is_visible),\n      custom_payment_2_label: opt.custom_payment_2_label,\n      custom_payment_2_price_rub: opt.custom_payment_2_price_rub ? parseFloat(opt.custom_payment_2_price_rub) : null,\n      custom_payment_2_link: opt.custom_payment_2_link,\n      custom_payment_2_is_visible: Boolean(opt.custom_payment_2_is_visible),\n      mode_label: opt.mode_label,\n    }));\n\n    return NextResponse.json(product);\n  } catch (error: any) {\n    console.error(`API Admin Product GET (slug: ${productSlug}) Error:`, error);\n    return NextResponse.json({ message: `Internal Server Error: ${error.message}`, error_details: error.toString() }, { status: 500 });\n  }\n}\n\n\nexport async function PUT(\n  request: NextRequest,\n  { params: routeParams }: { params: { slug: string } }\n) {\n  const productSlug = routeParams.slug ? String(routeParams.slug).trim() : null;\n\n  if (!productSlug) {\n    return NextResponse.json({ message: 'Product slug is required' }, { status: 400 });\n  }\n  let body;\n  try {\n    body = await request.json();\n    const {\n      name, \n      slug: newSlugRaw,\n      game_slug: gameSlugRaw, \n      status, \n      status_text, \n      short_description,\n      long_description, \n      image_url, \n      data_ai_hint, \n      mode,\n      gallery_image_urls, \n      functions_aim_title,\n      functions_aim,  \n      functions_aim_description,    \n      functions_esp_title,\n      functions_wallhack, \n      functions_esp_description,\n      functions_misc_title,\n      functions_misc,   \n      functions_misc_description,  \n      system_os, \n      system_build, \n      system_gpu, \n      system_cpu, \n      price_text,\n      retrieval_modal_intro_text, retrieval_modal_antivirus_text, retrieval_modal_antivirus_link_text, retrieval_modal_antivirus_link_url,\n      retrieval_modal_launcher_text, retrieval_modal_launcher_link_text, retrieval_modal_launcher_link_url,\n      retrieval_modal_key_paste_text, retrieval_modal_support_text, retrieval_modal_support_link_text, retrieval_modal_support_link_url,\n      retrieval_modal_how_to_run_link,\n      activation_type, // New activation fields\n      loader_download_url,\n      info_modal_content_html,\n      info_modal_support_link_text,\n      info_modal_support_link_url,\n      pricing_options\n    } = body;\n\n    const existingProduct = await getProductBySlugForUpdate(productSlug);\n    if (!existingProduct) {\n      return NextResponse.json({ message: `Товар со slug '${productSlug}' не найден.` }, { status: 404 });\n    }\n    \n    const targetProductId = existingProduct.id; \n    let effectiveSlug = productSlug;\n    const newSlug = newSlugRaw ? String(newSlugRaw).trim() : null;\n    const gameSlug = gameSlugRaw ? String(gameSlugRaw).trim() : null;\n\n\n    if (newSlug && newSlug !== productSlug) {\n        const anotherProductWithNewSlug = await query('SELECT id FROM products WHERE slug = ? AND id != ?', [newSlug, targetProductId]);\n        if (Array.isArray(anotherProductWithNewSlug) && anotherProductWithNewSlug.length > 0) {\n          return NextResponse.json({ message: `Товар с новым slug '${newSlug}' уже существует.` }, { status: 409 });\n        }\n        effectiveSlug = newSlug; \n    }\n\n    const productFields: Record<string, any> = {};\n    const productParams: any[] = [];\n\n    const addFieldToUpdate = (fieldName: string, value: any) => {\n        if (value !== undefined) { \n            productFields[fieldName] = value === '' ? null : value;\n        }\n    };\n    \n    addFieldToUpdate('name', name);\n    addFieldToUpdate('slug', effectiveSlug);\n    addFieldToUpdate('game_slug', gameSlug); \n    addFieldToUpdate('status', status);\n    \n    addFieldToUpdate('image_url', image_url);\n    addFieldToUpdate('status_text', status_text);\n    addFieldToUpdate('short_description', short_description);\n    addFieldToUpdate('long_description', long_description);\n    addFieldToUpdate('data_ai_hint', data_ai_hint);\n    addFieldToUpdate('mode', mode);\n    addFieldToUpdate('gallery_image_urls', Array.isArray(gallery_image_urls) ? gallery_image_urls.join(',') : gallery_image_urls);\n    \n    addFieldToUpdate('functions_aim_title', functions_aim_title);\n    addFieldToUpdate('functions_aim', functions_aim);\n    addFieldToUpdate('functions_aim_description', functions_aim_description);\n    addFieldToUpdate('functions_esp_title', functions_esp_title);\n    addFieldToUpdate('functions_wallhack', functions_wallhack);\n    addFieldToUpdate('functions_esp_description', functions_esp_description);\n    addFieldToUpdate('functions_misc_title', functions_misc_title);\n    addFieldToUpdate('functions_misc', functions_misc);\n    addFieldToUpdate('functions_misc_description', functions_misc_description);\n\n    addFieldToUpdate('system_os', system_os);\n    addFieldToUpdate('system_build', system_build);\n    addFieldToUpdate('system_gpu', system_gpu);\n    addFieldToUpdate('system_cpu', system_cpu);\n    addFieldToUpdate('price_text', price_text);\n\n    addFieldToUpdate('retrieval_modal_intro_text', retrieval_modal_intro_text);\n    addFieldToUpdate('retrieval_modal_antivirus_text', retrieval_modal_antivirus_text);\n    addFieldToUpdate('retrieval_modal_antivirus_link_text', retrieval_modal_antivirus_link_text);\n    addFieldToUpdate('retrieval_modal_antivirus_link_url', retrieval_modal_antivirus_link_url);\n    addFieldToUpdate('retrieval_modal_launcher_text', retrieval_modal_launcher_text);\n    addFieldToUpdate('retrieval_modal_launcher_link_text', retrieval_modal_launcher_link_text);\n    addFieldToUpdate('retrieval_modal_launcher_link_url', retrieval_modal_launcher_link_url);\n    addFieldToUpdate('retrieval_modal_key_paste_text', retrieval_modal_key_paste_text);\n    addFieldToUpdate('retrieval_modal_support_text', retrieval_modal_support_text);\n    addFieldToUpdate('retrieval_modal_support_link_text', retrieval_modal_support_link_text);\n    addFieldToUpdate('retrieval_modal_support_link_url', retrieval_modal_support_link_url);\n    addFieldToUpdate('retrieval_modal_how_to_run_link', retrieval_modal_how_to_run_link);\n\n    addFieldToUpdate('activation_type', activation_type);\n    addFieldToUpdate('loader_download_url', loader_download_url);\n    addFieldToUpdate('info_modal_content_html', info_modal_content_html);\n    addFieldToUpdate('info_modal_support_link_text', info_modal_support_link_text);\n    addFieldToUpdate('info_modal_support_link_url', info_modal_support_link_url);\n\n\n    if (Object.keys(productFields).length === 0 && (!pricing_options || pricing_options.length === (existingProduct.pricing_options || []).length)) {\n      // More sophisticated check might be needed if pricing_options content changes without length change\n      return NextResponse.json({ message: 'Нет данных для обновления товара.', product: existingProduct }, { status: 200 });\n    }\n\n    const setClauses = Object.keys(productFields).map(key => `${key} = ?`).join(', ');\n    const finalProductParams = [...Object.values(productFields), targetProductId];\n\n    const updateProductQuery = `UPDATE products SET ${setClauses}, updated_at = NOW() WHERE id = ?`;\n    \n    const productUpdateResult = await query(updateProductQuery, finalProductParams) as OkPacket | ResultSetHeader | any[];\n\n    let affectedRows = 0;\n    if (Array.isArray(productUpdateResult) && productUpdateResult.length > 0 && 'affectedRows' in productUpdateResult[0]) {\n        affectedRows = productUpdateResult[0].affectedRows;\n    } else if (productUpdateResult && 'affectedRows' in productUpdateResult) {\n        affectedRows = (productUpdateResult as OkPacket).affectedRows;\n    }\n    \n    await query('DELETE FROM product_pricing_options WHERE product_id = ?', [targetProductId]);\n    if (pricing_options && Array.isArray(pricing_options) && pricing_options.length > 0) {\n      for (const option of pricing_options) {\n        const { \n            duration_days, price_rub, price_gh, mode_label,\n            is_rub_payment_visible, is_gh_payment_visible,\n            custom_payment_1_label, custom_payment_1_price_rub, custom_payment_1_link, custom_payment_1_is_visible,\n            custom_payment_2_label, custom_payment_2_price_rub, custom_payment_2_link, custom_payment_2_is_visible\n        } = option;\n        await query(\n          `INSERT INTO product_pricing_options (\n              product_id, duration_days, price_rub, price_gh, mode_label,\n              is_rub_payment_visible, is_gh_payment_visible,\n              custom_payment_1_label, custom_payment_1_price_rub, custom_payment_1_link, custom_payment_1_is_visible,\n              custom_payment_2_label, custom_payment_2_price_rub, custom_payment_2_link, custom_payment_2_is_visible\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\n          [\n              targetProductId, duration_days, price_rub, price_gh, mode_label || null,\n              is_rub_payment_visible === undefined ? true : Boolean(is_rub_payment_visible),\n              is_gh_payment_visible === undefined ? true : Boolean(is_gh_payment_visible),\n              custom_payment_1_label || null, custom_payment_1_price_rub || null, custom_payment_1_link || null, Boolean(custom_payment_1_is_visible),\n              custom_payment_2_label || null, custom_payment_2_price_rub || null, custom_payment_2_link || null, Boolean(custom_payment_2_is_visible)\n          ]\n        );\n      }\n    }\n    \n    const updatedProductData = await getProductBySlugForUpdate(effectiveSlug); \n\n    return NextResponse.json({ message: 'Товар успешно обновлен', product: updatedProductData }, { status: 200 });\n\n  } catch (error: any) {\n    console.error(`API Admin Product PUT (slug: ${productSlug}) Error:`, error);\n     if (error.code === 'ER_NO_REFERENCED_ROW_2' || (error.message && error.message.includes('foreign key constraint fails'))) {\n        const submittedGameSlug = body?.game_slug ? String(body.game_slug).trim() : 'не указан';\n        return NextResponse.json({ message: `Ошибка внешнего ключа: Убедитесь, что указанный 'game_slug' (${submittedGameSlug}) существует в таблице категорий (games).`, error_details: error.toString() }, { status: 400 });\n    }\n    return NextResponse.json({ message: `Internal Server Error: ${error.message}`, error_details: error.toString() }, { status: 500 });\n  }\n}\n\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: { slug: string } }\n) {\n  const productSlug = params.slug ? String(params.slug).trim() : null;\n\n  if (!productSlug) {\n    return NextResponse.json({ message: 'Product slug is required' }, { status: 400 });\n  }\n\n  try {\n    const productToDelete = await getProductBySlugForUpdate(productSlug);\n    if (!productToDelete || !productToDelete.id) {\n        return NextResponse.json({ message: `Товар со slug '${productSlug}' не найден.` }, { status: 404 });\n    }\n    const productId = productToDelete.id; \n\n    const pricingOptions = await query('SELECT id FROM product_pricing_options WHERE product_id = ?', [productId]);\n    const pricingOptionIds = pricingOptions.map((opt: { id: number }) => opt.id);\n\n    if (pricingOptionIds.length > 0) {\n      const placeholders = pricingOptionIds.map(() => '?').join(',');\n      await query(`DELETE FROM purchases WHERE product_id = ? OR product_pricing_option_id IN (${placeholders})`, [productId, ...pricingOptionIds]);\n      await query('DELETE FROM product_pricing_options WHERE product_id = ?', [productId]);\n    } else {\n      await query('DELETE FROM purchases WHERE product_id = ?', [productId]);\n    }\n    \n    if (pricingOptionIds.length > 0) {\n        const invPlaceholders = pricingOptionIds.map(() => '?').join(',');\n        await query(`DELETE FROM user_inventory WHERE related_product_id = ? OR product_pricing_option_id IN (${invPlaceholders})`, [productId, ...pricingOptionIds]);\n    } else {\n        await query('DELETE FROM user_inventory WHERE related_product_id = ?', [productId]);\n    }\n    \n    if (pricingOptionIds.length > 0) {\n      const promoPlaceholders = pricingOptionIds.map(() => '?').join(',');\n      await query(`DELETE FROM promo_codes WHERE related_product_id = ? OR product_pricing_option_id IN (${promoPlaceholders})`, [productId, ...pricingOptionIds]);\n    } else {\n      await query('DELETE FROM promo_codes WHERE related_product_id = ?', [productId]);\n    }\n\n    const result = await query('DELETE FROM products WHERE id = ?', [productId]) as OkPacket | ResultSetHeader | any[];\n    \n    let affectedRows = 0;\n    if (Array.isArray(result) && result.length > 0 && 'affectedRows' in result[0]) {\n        affectedRows = result[0].affectedRows;\n    } else if (result && 'affectedRows' in result) {\n        affectedRows = (result as OkPacket).affectedRows;\n    }\n\n    if (affectedRows > 0) {\n      return NextResponse.json({ message: `Товар '${productSlug}' и связанные с ним записи успешно удалены.` }, { status: 200 });\n    } else {\n      return NextResponse.json({ message: `Товар '${productSlug}' не найден или уже был удален.` }, { status: 404 });\n    }\n\n  } catch (error: any) {\n    console.error(`API Admin Product DELETE (slug: ${productSlug}) Error:`, error);\n    if (error.code === 'ER_ROW_IS_REFERENCED_2' || (error.message && error.message.includes('foreign key constraint fails'))) {\n        return NextResponse.json({ message: `Не удалось удалить товар: На товар '${productSlug}' ссылаются другие записи, которые не были автоматически очищены. Ошибка: ${error.message}`, error_details: error.toString() }, { status: 409 });\n    }\n    return NextResponse.json({ message: `Internal Server Error: ${error.message}`, error_details: error.toString() }, { status: 500 });\n  }\n}\n\n// Ensure there's a newline at the very end of the file content.\n\n"],"names":[],"mappings":"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","debugId":null}}]
}