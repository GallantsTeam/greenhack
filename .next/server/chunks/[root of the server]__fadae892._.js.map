{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mysql.ts"],"sourcesContent":["\n'use server'; // Add this directive\n\nimport mysql from 'mysql2/promise';\n\nconst connectionConfig = {\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  connectionLimit: 10, // Optional: connection pool limit\n  namedPlaceholders: true, // Important for using object parameters\n  // Add SSL options if your Jino.ru MySQL requires it\n  // ssl: {\n  //   // ca: fs.readFileSync('/path/to/ca-cert.pem'), // if you have a CA cert\n  //   rejectUnauthorized: false // Be cautious with this in production, true is more secure\n  // }\n};\n\nlet pool: mysql.Pool | null = null;\n\nfunction getPool(): mysql.Pool {\n  if (!pool) {\n    if (!process.env.DB_HOST || !process.env.DB_USER || !process.env.DB_NAME) { // Password can be empty for some local setups\n      console.error(\"Database environment variables DB_HOST, DB_USER, or DB_NAME are not set.\");\n      throw new Error(\"Database environment variables are not fully set. Please check your .env.local file.\");\n    }\n    try {\n      pool = mysql.createPool(connectionConfig);\n      console.log(\"MySQL connection pool created successfully.\");\n\n      // Test the pool by getting a connection (optional, but good for early feedback)\n      pool.getConnection()\n        .then(connection => {\n          console.log(\"Successfully connected to database via pool.\");\n          connection.release();\n        })\n        .catch(err => {\n          console.error(\"Failed to get a connection from pool on startup:\", err);\n          // Depending on severity, you might want to invalidate the pool or exit\n          // For now, we'll let further queries fail if the pool is truly unusable.\n        });\n\n    } catch (error) {\n      console.error(\"Failed to create MySQL connection pool:\", error);\n      // Ensure pool remains null if creation fails\n      pool = null;\n      throw new Error(\"Database connection pool could not be created.\");\n    }\n  }\n  return pool;\n}\n\nexport async function query(sql: string, params?: any[] | object): Promise<any> {\n  const currentPool = getPool(); // This will throw if pool cannot be initialized\n\n  let connection;\n  try {\n    connection = await currentPool.getConnection();\n    console.log(`Executing SQL: ${sql} with params: ${params ? JSON.stringify(params) : 'No params'}`);\n    const [results] = await connection.execute(sql, params);\n    return results;\n  } catch (error: any) {\n    console.error('Database query error:', error.message, error.code, error.sqlMessage, error.sql);\n    throw new Error(`Database query failed: ${error.message}`);\n  } finally {\n    if (connection) {\n      connection.release();\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAEA,MAAM,mBAAmB;IACvB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,iBAAiB;IACjB,mBAAmB;AAMrB;AAEA,IAAI,OAA0B;AAE9B,SAAS;IACP,IAAI,CAAC,MAAM;QACT,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,EAAE;YACxE,QAAQ,KAAK,CAAC;YACd,MAAM,IAAI,MAAM;QAClB;QACA,IAAI;YACF,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;YACxB,QAAQ,GAAG,CAAC;YAEZ,gFAAgF;YAChF,KAAK,aAAa,GACf,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,WAAW,OAAO;YACpB,GACC,KAAK,CAAC,CAAA;gBACL,QAAQ,KAAK,CAAC,oDAAoD;YAClE,uEAAuE;YACvE,yEAAyE;YAC3E;QAEJ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2CAA2C;YACzD,6CAA6C;YAC7C,OAAO;YACP,MAAM,IAAI,MAAM;QAClB;IACF;IACA,OAAO;AACT;AAEO,eAAe,uCAAG,GAAH,MAAM,GAAW,EAAE,MAAuB;IAC9D,MAAM,cAAc,WAAW,gDAAgD;IAE/E,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,YAAY,aAAa;QAC5C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,IAAI,cAAc,EAAE,SAAS,KAAK,SAAS,CAAC,UAAU,aAAa;QACjG,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW,OAAO,CAAC,KAAK;QAChD,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO,EAAE,MAAM,IAAI,EAAE,MAAM,UAAU,EAAE,MAAM,GAAG;QAC7F,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;IAC3D,SAAU;QACR,IAAI,YAAY;YACd,WAAW,OAAO;QACpB;IACF;AACF;;;IAjBsB;;AAAA,iPAAA","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/cases/%5BcaseId%5D/route.ts"],"sourcesContent":["\n// src/app/api/cases/[caseId]/route.ts\nimport { NextResponse } from 'next/server';\nimport { query } from '@/lib/mysql'; // Using direct query for this specific structure\nimport type { CaseItem, Prize, CaseBoostOptionConfig } from '@/types';\n\nexport const dynamic = 'force-dynamic'; // Ensure fresh data\n\nexport async function GET(\n  request: Request,\n  { params }: { params: { caseId: string } }\n) {\n  const caseId = params.caseId;\n\n  if (!caseId) {\n    return NextResponse.json({ message: 'Case ID is required' }, { status: 400 });\n  }\n\n  try {\n    const caseResults = await query('SELECT * FROM cases WHERE id = ? AND is_active = TRUE', [caseId]);\n    if (!Array.isArray(caseResults) || caseResults.length === 0) {\n      return NextResponse.json({ message: 'Case not found or not active' }, { status: 404 });\n    }\n    const caseRow = caseResults[0];\n\n    const prizeResults = await query(\n        `SELECT p.*, prod.name as product_name_for_prize \n         FROM case_prizes p \n         LEFT JOIN products prod ON p.related_product_id = prod.id\n         WHERE p.case_id = ?`, \n        [caseId]\n    );\n    const prizes: Prize[] = prizeResults.map((pRow: any) => ({\n      id: pRow.id,\n      case_id: pRow.case_id,\n      name: pRow.name || pRow.product_name_for_prize || 'Неизвестный приз',\n      prize_type: pRow.prize_type,\n      related_product_id: pRow.related_product_id,\n      duration_days: pRow.duration_days ? parseInt(pRow.duration_days, 10) : null,\n      days: pRow.duration_days ? parseInt(pRow.duration_days, 10) : null, // Alias for compatibility if needed\n      balance_gh_amount: pRow.balance_gh_amount ? parseFloat(pRow.balance_gh_amount) : null,\n      image_url: pRow.image_url ? pRow.image_url.trim() : null,\n      imageUrl: (pRow.image_url || `https://placehold.co/120x120.png?text=${encodeURIComponent(pRow.name || 'Prize')}`).trim(),\n      chance: parseFloat(pRow.chance), // Stored as 0.0-1.0\n      sell_value_gh: pRow.sell_value_gh ? parseFloat(pRow.sell_value_gh) : null,\n      data_ai_hint: pRow.data_ai_hint || (pRow.name || 'prize').toLowerCase(),\n      product_name: pRow.product_name_for_prize, // Name from joined products table\n    }));\n\n    const boostConfigResults = await query('SELECT * FROM case_boost_options WHERE case_id = ?', [caseId]);\n    const boost_options_config: CaseBoostOptionConfig[] = boostConfigResults.map((bRow: any) => ({\n        id: bRow.id,\n        case_id: bRow.case_id,\n        boost_ref_id: bRow.boost_ref_id,\n        label: bRow.label,\n        is_active_for_case: Boolean(bRow.is_active_for_case),\n        override_cost_gh: bRow.override_cost_gh ? parseFloat(bRow.override_cost_gh) : null,\n        override_chance_multiplier: bRow.override_chance_multiplier ? parseFloat(bRow.override_chance_multiplier) : null,\n        override_description: bRow.override_description,\n    }));\n\n\n    const caseItem: CaseItem = {\n      id: caseRow.id,\n      name: caseRow.name,\n      image_url: caseRow.image_url ? caseRow.image_url.trim() : null,\n      imageUrl: (caseRow.image_url || `https://placehold.co/300x300.png?text=${encodeURIComponent(caseRow.name)}`).trim(),\n      prizes: prizes,\n      base_price_gh: parseFloat(caseRow.base_price_gh),\n      description: caseRow.description,\n      data_ai_hint: caseRow.data_ai_hint || caseRow.name.toLowerCase(),\n      is_active: Boolean(caseRow.is_active),\n      is_hot_offer: Boolean(caseRow.is_hot_offer),\n      timer_enabled: Boolean(caseRow.timer_enabled),\n      timer_ends_at: caseRow.timer_ends_at ? new Date(caseRow.timer_ends_at).toISOString() : null,\n      boost_options_config: boost_options_config.length > 0 ? boost_options_config : null,\n      created_at: caseRow.created_at,\n    };\n\n    return NextResponse.json(caseItem);\n  } catch (error: any) {\n    console.error(`API Error fetching case ${caseId}:`, error);\n    return NextResponse.json({ message: `Internal Server Error: ${error.message}` }, { status: 500 });\n  }\n}\n\n    \n"],"names":[],"mappings":"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","debugId":null}}]
}