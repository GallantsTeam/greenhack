{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement, \n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3 \n    ref={ref}\n    className={cn(\n      \"text-xl font-normal uppercase tracking-wider leading-none\", \n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement, \n  React.HTMLAttributes<HTMLParagraphElement> \n>(({ className, ...props }, ref) => (\n  <p \n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6DACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/account/page.tsx"],"sourcesContent":["\n'use client'; \n\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\";\nimport { User, DollarSign, Gift, Users as UsersIcon, Settings, ShoppingCart, LayoutGrid, LinkIcon as LinkIconLucide, UserPlus, RefreshCw, KeyRound, Info, Copy, Check, ArrowRight, Layers, Palette, FileText, Ticket, CheckCircle as CheckCircleIcon, PercentSquare, Loader2, PlusCircle, History as HistoryIcon } from \"lucide-react\"; \nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport type { ReferrerDetails, ReferredUsersCount, ActiveLicense, BalanceTransaction, Referral } from \"@/types\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { cn } from '@/lib/utils'; \nimport { Separator } from \"@/components/ui/separator\";\nimport { Input } from \"@/components/ui/input\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\n\nexport default function AccountDashboardPage() {\n  const { currentUser, fetchUserDetails, loading: authLoading } = useAuth();\n  const { toast } = useToast();\n  const [referrerDetails, setReferrerDetails] = useState<ReferrerDetails | null>(null);\n  const [referredCount, setReferredCount] = useState<ReferredUsersCount | null>(null);\n  const [activeLicenses, setActiveLicenses] = useState<ActiveLicense[]>([]);\n  const [isReferrerLoading, setIsReferrerLoading] = useState(false);\n  const [isCountLoading, setIsCountLoading] = useState(false);\n  const [isLicensesLoading, setIsLicensesLoading] = useState(true);\n  const [isRefreshingBalance, setIsRefreshingBalance] = useState(false);\n  const [referrerFetchError, setReferrerFetchError] = useState<string | null>(null);\n  const [copiedReferralLink, setCopiedReferralLink] = useState(false);\n  const [promoCode, setPromoCode] = useState('');\n  const [isApplyingPromoCode, setIsApplyingPromoCode] = useState(false);\n  const [balanceTransactions, setBalanceTransactions] = useState<BalanceTransaction[]>([]);\n  const [isTransactionsLoading, setIsTransactionsLoading] = useState(true);\n\n\n  const formatDate = (dateString: string | Date | undefined | null) => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleString('ru-RU', {\n      year: 'numeric', month: 'long', day: 'numeric',\n      hour: '2-digit', minute: '2-digit'\n    });\n  };\n\n  const fetchBalanceTransactions = useCallback(async () => {\n    if (!currentUser?.id) {\n      setIsTransactionsLoading(false);\n      return;\n    }\n    setIsTransactionsLoading(true);\n    try {\n      const response = await fetch(`/api/user/${currentUser.id}/balance-transactions`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch transaction history');\n      }\n      const data: BalanceTransaction[] = await response.json();\n      setBalanceTransactions(data);\n    } catch (error) {\n      console.error(\"Error fetching transaction history:\", error);\n      setBalanceTransactions([]); \n    } finally {\n      setIsTransactionsLoading(false);\n    }\n  }, [currentUser?.id]);\n\n  useEffect(() => {\n    if (currentUser?.id) {\n        fetchBalanceTransactions();\n    }\n  }, [currentUser?.id, fetchBalanceTransactions]);\n\n\n  useEffect(() => {\n    if (currentUser?.referred_by_user_id) {\n      setIsReferrerLoading(true);\n      setReferrerFetchError(null);\n      fetch(`/api/user/${currentUser.referred_by_user_id}/referrer-details`)\n        .then(async res => { \n          if (!res.ok) {\n            const errorPayload = await res.json().catch(() => ({ message: `Failed to fetch referrer details (${res.statusText || res.status})` }));\n            throw new Error(errorPayload.message);\n          }\n          return res.json();\n        })\n        .then(data => setReferrerDetails(data))\n        .catch(error => { \n          console.error(\"Error fetching referrer details from client:\", error.message); \n          setReferrerFetchError(error.message || \"Не удалось загрузить информацию о пригласившем.\");\n        })\n        .finally(() => setIsReferrerLoading(false));\n    } else {\n      setReferrerDetails(null); \n      setReferrerFetchError(null);\n    }\n\n    if (currentUser?.id) {\n      setIsCountLoading(true);\n      fetch(`/api/user/${currentUser.id}/referred-count`)\n        .then(res => {\n          if (!res.ok) return res.json().then(err => Promise.reject(new Error(err.message || 'Failed to fetch referred count')));\n          return res.json();\n        })\n        .then(data => setReferredCount(data))\n        .catch(error => {\n          console.error(\"Error fetching referred count:\", error);\n          setReferredCount({ count: 0 }); \n        })\n        .finally(() => setIsCountLoading(false));\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    const fetchActiveLicenses = async () => {\n      if (!currentUser?.id) {\n          setIsLicensesLoading(false);\n          return;\n      };\n      setIsLicensesLoading(true);\n      try {\n        const response = await fetch(`/api/user/${currentUser.id}/licenses`);\n        if (response.ok) {\n          const licenses = await response.json();\n          setActiveLicenses(licenses);\n        } else {\n           console.error(\"Failed to fetch licenses\");\n           setActiveLicenses([]);\n        }\n      } catch (error) {\n         console.error(\"Error fetching active licenses:\", error);\n         setActiveLicenses([]);\n      } finally {\n        setIsLicensesLoading(false);\n      }\n    };\n    if (currentUser?.id) {\n        fetchActiveLicenses();\n    }\n  }, [currentUser?.id]);\n\n\n  const formatBalance = (balance: number | undefined | null): string => {\n    if (typeof balance !== 'number' || balance === null || isNaN(balance)) {\n      return '0';\n    }\n    return Math.floor(balance).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  };\n  \n  const handleRefreshBalance = useCallback(async () => {\n    if (!currentUser?.id) return;\n    setIsRefreshingBalance(true);\n    try {\n      await fetchUserDetails(currentUser.id);\n      toast({ title: \"Баланс обновлен\" });\n    } catch (error) {\n      toast({ title: \"Ошибка\", description: \"Не удалось обновить баланс.\", variant: \"destructive\" });\n    } finally {\n      setIsRefreshingBalance(false);\n    }\n  }, [currentUser?.id, fetchUserDetails, toast]);\n\n  const handleCopyReferralLink = async () => {\n    if (!currentUser?.referral_code) return;\n    const link = `${window.location.origin}/auth/register?ref=${currentUser.referral_code}`;\n    try {\n      await navigator.clipboard.writeText(link);\n      setCopiedReferralLink(true);\n      toast({\n        title: \"Скопировано!\",\n        description: \"Ссылка для регистрации с реферальным кодом успешно скопирована!\",\n      });\n      setTimeout(() => setCopiedReferralLink(false), 2000);\n    } catch (err) {\n      toast({\n        title: \"Ошибка\",\n        description: \"Не удалось скопировать ссылку.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleGetLicense = (productName?: string, howToRunLink?: string | null) => {\n     if (howToRunLink && howToRunLink !== \"#\") {\n        window.open(howToRunLink, '_blank');\n     } else {\n        toast({\n            title: `Инструкция для ${productName || 'софта'}`,\n            description: (\n                <p>\n                Инструкция по запуску для этого продукта пока не добавлена. Обратитесь в поддержку:{\" \"}\n                <a href=\"https://t.me/Gallant_kz\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"underline text-primary\">\n                    Поддержка\n                </a>\n                </p>\n            ),\n            duration: 10000,\n        });\n     }\n  };\n\n  const handleApplyPromoCode = async () => {\n    if (!promoCode.trim() || !currentUser) {\n      toast({ title: \"Ошибка\", description: \"Введите промокод.\", variant: \"destructive\" });\n      return;\n    }\n    setIsApplyingPromoCode(true);\n    \n    try {\n      const response = await fetch('/api/promocode/apply', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId: currentUser.id, code: promoCode }),\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || 'Failed to apply promo code');\n      toast({ title: \"Успех!\", description: data.message });\n      if(currentUser?.id) {\n        await fetchUserDetails(currentUser.id); \n        fetchBalanceTransactions(); \n      }\n      setPromoCode('');\n    } catch (error: any) {\n      toast({ title: \"Ошибка промокода\", description: error.message, variant: \"destructive\" });\n    } finally {\n      setIsApplyingPromoCode(false);\n    }\n  };\n\n  const formatTransactionType = (type: BalanceTransaction['transaction_type']): string => {\n    switch (type) {\n      case 'deposit': return 'Пополнение';\n      case 'purchase_product': return 'Покупка';\n      case 'open_case': return 'Кейс';\n      case 'sell_prize': return 'Продажа';\n      case 'referral_bonus': return 'Реф. бонус';\n      case 'admin_adjustment': return 'Админ. коррекция';\n      default: return type;\n    }\n  };\n\n  if (authLoading) {\n    return <div className=\"flex justify-center items-center flex-1\"><p>Загрузка данных аккаунта...</p></div>;\n  }\n\n\n  if (!currentUser) {\n    return <div className=\"flex justify-center items-center flex-1 min-h-screen\"><p>Пожалуйста, войдите для доступа к этой странице.</p></div>;\n  }\n  \n  return (\n    <div className=\"space-y-6 flex-1\">\n      <div className=\"mb-4\"> \n        <p className=\"text-lg text-foreground/90\">\n          Приветствую, <span className=\"font-semibold text-primary\">{currentUser?.username || 'Пользователь'}</span>!\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-2 flex flex-col\">\n          <Card className=\"shadow-lg flex-grow\"> \n            <CardHeader>\n              <CardTitle className=\"text-xl text-primary flex items-center\">\n                <Layers className=\"mr-2 h-6 w-6\"/>\n                Активные лицензии\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {isLicensesLoading ? (\n                <p className=\"text-muted-foreground\">Загрузка активных лицензий...</p>\n              ) : activeLicenses.length > 0 ? (\n                <ul className=\"space-y-4\">\n                  {activeLicenses.map(license => (\n                    <li key={license.id} className=\"p-4 border border-border rounded-md space-y-2\">\n                      <h4 className=\"font-semibold text-foreground\">{license.productName}</h4>\n                      {license.activated_at && <p className=\"text-xs text-muted-foreground\">Активирован: {formatDate(license.activated_at)}</p>}\n                      <p className=\"text-xs text-muted-foreground\">Истекает: {license.expiryDate ? formatDate(license.expiryDate) : 'Бессрочно'}</p>\n                      <div className=\"flex gap-2 mt-2\">\n                        <Button asChild size=\"sm\" variant=\"outline\" className=\"border-primary text-primary hover:bg-primary/10\">\n                          <Link href={`/products/${license.productSlug}`}>Продлить</Link>\n                        </Button>\n                        <Button size=\"sm\" variant=\"outline\" onClick={() => handleGetLicense(license.productName, license.how_to_run_link)} className=\"border-primary text-primary hover:bg-primary/10\">Как запускать?</Button>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                 <div className=\"min-h-[100px] flex items-center justify-center\">\n                    <p className=\"text-muted-foreground\">У вас нет активных лицензий.</p>\n                 </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"space-y-6 flex flex-col\">\n          <Card className=\"shadow-lg\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">Текущий Баланс</CardTitle>\n              <Button variant=\"ghost\" size=\"icon\" onClick={handleRefreshBalance} disabled={isRefreshingBalance} className=\"h-6 w-6 p-0 text-primary hover:text-primary/80\">\n                <RefreshCw className={cn(\"h-4 w-4\", isRefreshingBalance && \"animate-spin\")} />\n              </Button>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-foreground\">{formatBalance(currentUser?.balance)} <span className=\"text-gradient-gh font-bold\">GH</span></div>\n              <p className=\"text-xs text-muted-foreground pt-1\">Доступно для покупок и кейсов</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"shadow-lg\">\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">Реферальная программа</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-2\">\n              <p className=\"text-xs text-muted-foreground\">\n                Пригласи друга и получи {currentUser.referral_percentage !== undefined ? currentUser.referral_percentage.toFixed(0) : '5'}% на свой баланс GH с его первой покупки!\n              </p>\n              <div className=\"flex items-center gap-1\">\n                <p className=\"text-xs font-medium text-muted-foreground whitespace-nowrap\">Ваш код:</p>\n                <Input \n                  type=\"text\" \n                  value={currentUser.referral_code || 'N/A'} \n                  readOnly \n                  className=\"h-7 text-xs font-mono bg-muted/50 text-foreground flex-grow\"\n                />\n                <Button \n                  variant=\"ghost\" \n                  size=\"icon\" \n                  className=\"h-7 w-7 p-0 text-primary hover:text-primary/80\" \n                  onClick={handleCopyReferralLink}\n                  disabled={!currentUser.referral_code}\n                >\n                  {copiedReferralLink ? <Check className=\"h-3.5 w-3.5\" /> : <Copy className=\"h-3.5 w-3.5\" />}\n                </Button>\n              </div>\n              <div className=\"flex items-center gap-1 text-xs\">\n                <p className=\"font-medium text-muted-foreground whitespace-nowrap\">Приглашено:</p>\n                <span className=\"text-foreground font-semibold\">{isCountLoading ? '...' : referredCount?.count ?? 0}</span>\n              </div>\n              {isReferrerLoading && <p className=\"text-xs text-muted-foreground\">Загрузка пригласившего...</p>}\n              {!isReferrerLoading && referrerFetchError && <p className=\"text-xs text-destructive\">{referrerFetchError}</p>}\n              {!isReferrerLoading && !referrerFetchError && referrerDetails && (\n                <p className=\"text-xs text-muted-foreground\">Вас пригласил: <span className=\"font-semibold text-foreground\">{referrerDetails.username}</span></p>\n              )}\n            </CardContent>\n          </Card>\n\n           <Card className=\"shadow-lg\">\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">Промокод</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center gap-2\">\n                <Input\n                  type=\"text\"\n                  placeholder=\"Введите промокод\"\n                  value={promoCode}\n                  onChange={(e) => setPromoCode(e.target.value.toUpperCase())}\n                  className=\"h-9 text-sm\"\n                  disabled={isApplyingPromoCode}\n                />\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"h-9 w-9 text-primary hover:text-primary/80 hover:bg-primary/10\"\n                  onClick={handleApplyPromoCode}\n                  disabled={isApplyingPromoCode || !promoCode.trim()}\n                  aria-label=\"Применить промокод\"\n                >\n                  {isApplyingPromoCode ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <CheckCircleIcon className=\"h-5 w-5\" />}\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n      \n       <Card className=\"shadow-lg mt-6\">\n        <CardHeader>\n          <CardTitle className=\"text-xl text-primary flex items-center\">\n            <HistoryIcon className=\"mr-2 h-6 w-6\" />\n            История транзакций\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {isTransactionsLoading ? (\n             <div className=\"flex justify-center items-center py-6\">\n                <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\n                <p className=\"ml-2 text-muted-foreground\">Загрузка истории...</p>\n            </div>\n          ) : balanceTransactions.length > 0 ? (\n            <ScrollArea className=\"h-[200px] w-full rounded-md border border-border p-1\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"text-primary text-xs\">Дата</TableHead>\n                    <TableHead className=\"text-primary text-xs\">Тип</TableHead>\n                    <TableHead className=\"text-right text-primary text-xs\">Сумма (GH)</TableHead>\n                    <TableHead className=\"text-primary text-xs hidden sm:table-cell\">Описание</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {balanceTransactions.map((tx) => (\n                    <TableRow key={tx.id}>\n                      <TableCell className=\"text-foreground/80 text-xs\">{formatDate(tx.created_at)}</TableCell>\n                      <TableCell className=\"text-foreground/80 text-xs\">{formatTransactionType(tx.transaction_type)}</TableCell>\n                      <TableCell className={cn(\n                        \"text-right font-medium text-xs\",\n                        tx.amount_gh > 0 ? \"text-green-500\" : \"text-red-500\"\n                      )}>\n                        {tx.amount_gh > 0 ? '+' : ''}{tx.amount_gh.toFixed(2)}\n                      </TableCell>\n                      <TableCell className=\"text-foreground/70 text-xs hidden sm:table-cell truncate max-w-xs\">{tx.description || '-'}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </ScrollArea>\n          ) : (\n            <p className=\"text-muted-foreground text-center py-6\">История транзакций пуста.</p>\n          )}\n        </CardContent>\n      </Card>\n\n       <Card className=\"shadow-lg mt-6\">\n        <CardHeader>\n          <CardTitle className=\"text-xl text-primary flex items-center\">\n            <Palette className=\"mr-2 h-6 w-6\"/> \n            Быстрые действия\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n          <Button asChild variant=\"outline\" className=\"w-full border-primary text-primary hover:bg-primary/10 hover:text-primary/90\"><Link href=\"/games\">Каталог</Link></Button>\n          <Button asChild variant=\"outline\" className=\"w-full border-primary text-primary hover:bg-primary/10 hover:text-primary/90\"><Link href=\"/account/balance\">Пополнить баланс</Link></Button>\n          <Button asChild variant=\"outline\" className=\"w-full border-primary text-primary hover:bg-primary/10 hover:text-primary/90\"><Link href=\"/account/purchase-history\">История покупок</Link></Button>\n          <Button asChild variant=\"outline\" className=\"w-full border-primary text-primary hover:bg-primary/10 hover:text-primary/90\"><Link href=\"/#case-opening\">Открыть кейс</Link></Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}