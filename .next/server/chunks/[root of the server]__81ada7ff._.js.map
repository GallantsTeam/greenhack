{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mysql.ts"],"sourcesContent":["\n'use server'; // Add this directive\n\nimport mysql from 'mysql2/promise';\n\nconst connectionConfig = {\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  connectionLimit: 10, // Optional: connection pool limit\n  namedPlaceholders: true, // Important for using object parameters\n  // Add SSL options if your Jino.ru MySQL requires it\n  // ssl: {\n  //   // ca: fs.readFileSync('/path/to/ca-cert.pem'), // if you have a CA cert\n  //   rejectUnauthorized: false // Be cautious with this in production, true is more secure\n  // }\n};\n\nlet pool: mysql.Pool | null = null;\n\nfunction getPool(): mysql.Pool {\n  if (!pool) {\n    if (!process.env.DB_HOST || !process.env.DB_USER || !process.env.DB_NAME) { // Password can be empty for some local setups\n      console.error(\"Database environment variables DB_HOST, DB_USER, or DB_NAME are not set.\");\n      throw new Error(\"Database environment variables are not fully set. Please check your .env.local file.\");\n    }\n    try {\n      pool = mysql.createPool(connectionConfig);\n      console.log(\"MySQL connection pool created successfully.\");\n\n      // Test the pool by getting a connection (optional, but good for early feedback)\n      pool.getConnection()\n        .then(connection => {\n          console.log(\"Successfully connected to database via pool.\");\n          connection.release();\n        })\n        .catch(err => {\n          console.error(\"Failed to get a connection from pool on startup:\", err);\n          // Depending on severity, you might want to invalidate the pool or exit\n          // For now, we'll let further queries fail if the pool is truly unusable.\n        });\n\n    } catch (error) {\n      console.error(\"Failed to create MySQL connection pool:\", error);\n      // Ensure pool remains null if creation fails\n      pool = null;\n      throw new Error(\"Database connection pool could not be created.\");\n    }\n  }\n  return pool;\n}\n\nexport async function query(sql: string, params?: any[] | object): Promise<any> {\n  const currentPool = getPool(); // This will throw if pool cannot be initialized\n\n  let connection;\n  try {\n    connection = await currentPool.getConnection();\n    console.log(`Executing SQL: ${sql} with params: ${params ? JSON.stringify(params) : 'No params'}`);\n    const [results] = await connection.execute(sql, params);\n    return results;\n  } catch (error: any) {\n    console.error('Database query error:', error.message, error.code, error.sqlMessage, error.sql);\n    throw new Error(`Database query failed: ${error.message}`);\n  } finally {\n    if (connection) {\n      connection.release();\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAEA,MAAM,mBAAmB;IACvB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,iBAAiB;IACjB,mBAAmB;AAMrB;AAEA,IAAI,OAA0B;AAE9B,SAAS;IACP,IAAI,CAAC,MAAM;QACT,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAO,EAAE;YACxE,QAAQ,KAAK,CAAC;YACd,MAAM,IAAI,MAAM;QAClB;QACA,IAAI;YACF,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;YACxB,QAAQ,GAAG,CAAC;YAEZ,gFAAgF;YAChF,KAAK,aAAa,GACf,IAAI,CAAC,CAAA;gBACJ,QAAQ,GAAG,CAAC;gBACZ,WAAW,OAAO;YACpB,GACC,KAAK,CAAC,CAAA;gBACL,QAAQ,KAAK,CAAC,oDAAoD;YAClE,uEAAuE;YACvE,yEAAyE;YAC3E;QAEJ,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2CAA2C;YACzD,6CAA6C;YAC7C,OAAO;YACP,MAAM,IAAI,MAAM;QAClB;IACF;IACA,OAAO;AACT;AAEO,eAAe,uCAAG,GAAH,MAAM,GAAW,EAAE,MAAuB;IAC9D,MAAM,cAAc,WAAW,gDAAgD;IAE/E,IAAI;IACJ,IAAI;QACF,aAAa,MAAM,YAAY,aAAa;QAC5C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,IAAI,cAAc,EAAE,SAAS,KAAK,SAAS,CAAC,UAAU,aAAa;QACjG,MAAM,CAAC,QAAQ,GAAG,MAAM,WAAW,OAAO,CAAC,KAAK;QAChD,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,yBAAyB,MAAM,OAAO,EAAE,MAAM,IAAI,EAAE,MAAM,UAAU,EAAE,MAAM,GAAG;QAC7F,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;IAC3D,SAAU;QACR,IAAI,YAAY;YACd,WAAW,OAAO;QACpB;IACF;AACF;;;IAjBsB;;AAAA,iPAAA","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/admin/key-activation-requests/%5BinventoryItemId%5D/approve/route.ts"],"sourcesContent":["\n// src/app/api/admin/key-activation-requests/[inventoryItemId]/approve/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\nimport { query } from '@/lib/mysql';\nimport type { OkPacket } from 'mysql2';\n\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: { inventoryItemId: string } }\n) {\n  // TODO: Add admin authentication check\n  const inventoryItemId = parseInt(params.inventoryItemId, 10);\n  if (isNaN(inventoryItemId)) {\n    return NextResponse.json({ message: 'Invalid inventory item ID' }, { status: 400 });\n  }\n\n  try {\n    // Fetch duration_days for the item\n    const itemDetailsResults = await query(\n      `SELECT \n         COALESCE(ppo.duration_days, cp.duration_days) as duration_days\n       FROM user_inventory ui\n       LEFT JOIN product_pricing_options ppo ON ui.product_pricing_option_id = ppo.id\n       LEFT JOIN case_prizes cp ON ui.case_prize_id = cp.id\n       WHERE ui.id = ?`,\n      [inventoryItemId]\n    );\n\n    if (itemDetailsResults.length === 0) {\n      return NextResponse.json({ message: 'Предмет инвентаря не найден.' }, { status: 404 });\n    }\n    const itemDetails = itemDetailsResults[0];\n    const durationDays = itemDetails.duration_days ? parseInt(itemDetails.duration_days, 10) : null;\n\n    const activatedAt = new Date();\n    let expiresAt: string | null = null;\n\n    if (durationDays && durationDays > 0) {\n      const expiryDate = new Date(activatedAt);\n      expiryDate.setDate(expiryDate.getDate() + durationDays);\n      expiresAt = expiryDate.toISOString().slice(0, 19).replace('T', ' ');\n    }\n    \n    console.log(`Approving item ${inventoryItemId}. Duration: ${durationDays}, Calculated Expires At: ${expiresAt}`);\n\n    const result = await query(\n      'UPDATE user_inventory SET activation_status = ?, is_used = TRUE, activated_at = ?, expires_at = ?, updated_at = NOW() WHERE id = ? AND activation_status = ?',\n      ['active', activatedAt.toISOString().slice(0, 19).replace('T', ' '), expiresAt, inventoryItemId, 'pending_admin_approval']\n    ) as OkPacket;\n\n    if (result.affectedRows > 0) {\n      // TODO: Send notification to user\n      return NextResponse.json({ message: 'Запрос на активацию ключа успешно одобрен.' });\n    } else {\n      return NextResponse.json({ message: 'Запрос не найден в статусе ожидания или уже обработан.' }, { status: 404 });\n    }\n  } catch (error: any) {\n    console.error(`API Admin Approve Key Activation (ID: ${inventoryItemId}) Error:`, error);\n    return NextResponse.json({ message: `Internal Server Error: ${error.message}` }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":"AACA,+EAA+E;;;;AAC/E;AACA;;;AAGO,eAAe,IACpB,OAAoB,EACpB,EAAE,MAAM,EAA2C;IAEnD,uCAAuC;IACvC,MAAM,kBAAkB,SAAS,OAAO,eAAe,EAAE;IACzD,IAAI,MAAM,kBAAkB;QAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACnF;IAEA,IAAI;QACF,mCAAmC;QACnC,MAAM,qBAAqB,MAAM,CAAA,GAAA,qHAAA,CAAA,QAAK,AAAD,EACnC,CAAC;;;;;sBAKe,CAAC,EACjB;YAAC;SAAgB;QAGnB,IAAI,mBAAmB,MAAM,KAAK,GAAG;YACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA+B,GAAG;gBAAE,QAAQ;YAAI;QACtF;QACA,MAAM,cAAc,kBAAkB,CAAC,EAAE;QACzC,MAAM,eAAe,YAAY,aAAa,GAAG,SAAS,YAAY,aAAa,EAAE,MAAM;QAE3F,MAAM,cAAc,IAAI;QACxB,IAAI,YAA2B;QAE/B,IAAI,gBAAgB,eAAe,GAAG;YACpC,MAAM,aAAa,IAAI,KAAK;YAC5B,WAAW,OAAO,CAAC,WAAW,OAAO,KAAK;YAC1C,YAAY,WAAW,WAAW,GAAG,KAAK,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK;QACjE;QAEA,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,gBAAgB,YAAY,EAAE,aAAa,yBAAyB,EAAE,WAAW;QAE/G,MAAM,SAAS,MAAM,CAAA,GAAA,qHAAA,CAAA,QAAK,AAAD,EACvB,gKACA;YAAC;YAAU,YAAY,WAAW,GAAG,KAAK,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK;YAAM;YAAW;YAAiB;SAAyB;QAG5H,IAAI,OAAO,YAAY,GAAG,GAAG;YAC3B,kCAAkC;YAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA6C;QACnF,OAAO;YACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAyD,GAAG;gBAAE,QAAQ;YAAI;QAChH;IACF,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,CAAC,sCAAsC,EAAE,gBAAgB,QAAQ,CAAC,EAAE;QAClF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;QAAC,GAAG;YAAE,QAAQ;QAAI;IACjG;AACF","debugId":null}}]
}